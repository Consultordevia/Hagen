#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50210_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50210){}   
		type("System.IO.Path"; System_IO_Path50210) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50210 "Descuento abonos venta COP2"
{
	RDLCLayout = './Layouts/DescuentoabonosventaCOP2.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem(Customer;Customer)
		{
			PrintOnlyIfDetail = true;
			RequestFilterFields = "No.","Payment Method Code";
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(CustomerFIELDCAPTION_Name; Customer.FieldCaption(Name))
			{
			}
			column(CustomerFIELDCAPTION_No; Customer.FieldCaption("No."))
			{
			}
			column(Name_Customer; Customer.Name)
			{
			}
			column(No_Customer; Customer."No.")
			{
			}
			dataitem(MovCli;"Cust. Ledger Entry")
			{
				DataItemLink = "Customer No."=field("No.");
				DataItemTableView = sorting("Customer No.",Open,"Document Type","Posting Date") where("Document Type"=filter("Credit Memo"),Open=const(true));
				column(ReportForNavId_6; 6) {} // Autogenerated by ForNav - Do not delete
				column(PostingDate; MovCli."Posting Date")
				{
				}
				column(DueDate; MovCli."Due Date")
				{
				}
				column(CurrencyCode; MovCli."Currency Code")
				{
				}
				column(RemainingAmount; MovCli."Remaining Amount")
				{
				}
				column(Amount; MovCli.Amount)
				{
				}
				column(Description; MovCli.Description)
				{
				}
				column(DocumentNo; MovCli."Document No.")
				{
				}
				column(DocumentType; MovCli."Document Type")
				{
				}
				trigger OnPreDataItem();
				begin
					MovCli.SetRange("Posting Date",fechaini,fechafin);
				end;
				
				trigger OnAfterGetRecord();
				begin
					if YaDescontado then
					  CurrReport.Skip
					else
					  if DescontarAbono(MovCli) then begin
						FVenci := MovCli."Due Date";
						MCtemp.Reset;
						MCtemp.SetCurrentkey("Customer No.","Posting Date","Currency Code");
						if MCtemp.Find('-') then begin
						  totalfras := 0;
						  repeat
							LD.Init;
							LD."Journal Template Name" := 'CARTERA';
							LD."Journal Batch Name" := 'DTO-ABO'; //7confcar."Sec. diario descuento abonos";
							lin := lin + 10000;
							LD."Line No." := lin;
							LD."Account Type" := LD."account type"::Customer;
							LD.Validate("Account No.",MovCli."Customer No.");
							LD."Posting Date" := WorkDate;
							LD."Document Type" := LD."document type"::" ";
							LD."Document No." := Doc;
							//microval 21 040302
							//LD.Descripción := 'Descuento abono Nº '+MovCli."Nº documento";
							LD.Description := 'Descuento abonos. ' + Format(MCtemp."Document Type") + ' Nº '+MCtemp."Document No.";
							if MCtemp."Document Type" = MCtemp."document type"::Bill then begin
							  LD.Description := LD.Description + ' / ' + MCtemp."Bill No.";
							  if MCtemp."Due Date" > FVenci then
								FVenci := MCtemp."Due Date";
							end;
							//fin
							LD."Applies-to Doc. Type" := MCtemp."Document Type";
							LD.Validate("Applies-to Doc. No.",MCtemp."Document No.");
							LD.Validate("Applies-to Bill No.",MCtemp."Bill No.");
							MCtemp.CalcFields(MCtemp.Amount);
							LD.Validate(Amount,-MCtemp.Amount);
							RecDirPago.Reset;
							RecDirPago.SetRange(RecDirPago."Customer No.",Customer."No.");
							if RecDirPago.Find('-') then begin
								 LD."Pmt. Address Code":=RecDirPago.Code;
							end;
							LD.Insert(true);
							totalfras := totalfras - LD.Amount;
						  until MCtemp.Next = 0;
						  //microval 21 07/02/2002
						  if totalfras > 0 then begin
						  //fin
							LD.Init;
							LD."Journal Template Name" := 'CARTERA';
							LD."Journal Batch Name" := 'DTO-ABO'; confcar."Sec. diario descuento abonos";
							lin := lin + 10000;
							LD."Line No." := lin;
							LD."Account Type" := LD."account type"::Customer;
							LD.Validate("Account No.",MovCli."Customer No.");
							LD."Posting Date" := WorkDate;
							LD."Document Type" := LD."document type"::Bill;
							LD."Document No." := Doc;
							LD."Bill No." := '1';
							LD.Description := 'Descuento abonos. Nuevo efecto Nº '+Doc;
							LD.Validate(Amount,totalfras);
							//microval 21 030302
							//LD.VALIDATE("Fecha vencimiento",MovCli."Fecha vencimiento");
							LD.Validate("Due Date",FVenci);
							//fin
							LD.Insert(true);
						  //microval 21 07/02/2002
						  end else
							//microval 21 040302
							//Suman mas los abonos que las facturas, hay que dejar pendientes abonos
							if totalfras < 0 then begin
							  LD.Reset;
							  LD.SetRange("Journal Template Name",'CARTERA');
							  LD.SetRange("Journal Batch Name",'DTO-ABO');
							  LD.SetRange(LD."Applies-to Doc. Type",LD."applies-to doc. type"::"Credit Memo");
							  if LD.Find('+') then begin
								repeat
								  if (LD.Amount > 0) then begin
									if (LD.Amount > -totalfras) then begin
									  LD.Amount := LD.Amount + totalfras;
									  LD.Validate(Amount);
									  LD.Modify;
									  totalfras := 0;
									end else begin
									  totalfras := totalfras + LD.Amount;
									  LD.Delete;
									end;
								  end;
								until (totalfras = 0) or (LD.Next(-1) = 0);
							  end;
							  //fin
							end;
						  //fin
						  Doc := IncStr(Doc);
						  YaDescontado := true;
						end;
					  end;
				end;
				
			}
			trigger OnAfterGetRecord();
			begin
				YaDescontado := false;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = true;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(fechaini;fechaini)
					{
						ApplicationArea = Basic;
						Caption = 'Fecha inicio';
					}
					field(fechafin;fechafin)
					{
						ApplicationArea = Basic;
						Caption = 'Fecha fin';
					}
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		/*
		confcar.GET;
		confcar."Contador descuento abonos":=Doc;
		confcar.MODIFY;
		COMMIT;
		*/
		;ReportForNav.Post;

	end;

	trigger OnPreReport()
	begin
		if fechaini = 0D then
		  Error('Falta introducir la fecha de inicio.');
		if fechafin = 0D then
		  Error('Falta introducir la fecha de fin.');
		if fechaini > fechafin then
		  Error('La fecha de inicio no puede ser mayor que la fecha de fin.');
		ndoc:='1';
		/*
		confcar.FIND('-');
		confcar.TESTFIELD(confcar."Sec. diario descuento abonos");
		/// e.nav
		confcar.TESTFIELD(confcar."Contador descuento abonos");
		IF confcar."Contador descuento abonos"<>'' THEN BEGIN
			 ndoc := confcar."Contador descuento abonos";
		END;
		*/
		Commit;
		/*
		IF NOT (SDG.GET('CARTERA',confcar."Sec. diario descuento abonos")) THEN
		  ERROR('Falta crear la sección del diario de Cartera '+confcar."Sec. diario descuento abonos");
		SDG.TESTFIELD(SDG."No. Series");
		LD.SETRANGE("Journal Template Name",'CARTERA');
		LD.SETRANGE("Journal Batch Name",confcar."Sec. diario descuento abonos");
		IF LD.FIND('-') THEN
		  ERROR('Debe registrar o eliminar las líneas del diario cartera sección '+confcar."Sec. diario descuento abonos"+
			' antes de preparar otro descuento de abonos.');
			*/
		lin := 0;
		Doc := ndoc;
		;ReportsForNavPre;

	end;
	var
		ndoc: Code[10];
		fechaini: Date;
		fechafin: Date;
		LD: Record "Gen. Journal Line";
		MCtemp: Record "Cust. Ledger Entry" temporary;
		confcar: Record "Cartera Setup";
		lin: Integer;
		totalfras: Decimal;
		YaDescontado: Boolean;
		LSer: Record "No. Series Line";
		Doc: Code[10];
		SDG: Record "Gen. Journal Batch";
		FVenci: Date;
		RecDirPago: Record "Customer Pmt. Address";

	procedure DescontarAbono(MC: Record "Cust. Ledger Entry") Descontar: Boolean
	var
		MC2: Record "Cust. Ledger Entry";
		total: Decimal;
	begin
		MCtemp.Reset;
		MCtemp.DeleteAll;
		MCtemp.SetCurrentkey(MCtemp."Customer No.",MCtemp.Open,MCtemp."Document Type",MCtemp."Posting Date");
		MC2.SetCurrentkey(MC2."Customer No.",MC2.Open,MC2."Document Type",MC2."Posting Date");
		MC2.SetRange("Customer No.",MC."Customer No.");
		MC2.SetRange(Open,true);
		MC2.SetRange("Document Type",MC2."document type"::Bill);
		MC2.SetRange("Posting Date",fechaini,fechafin);
		total := 0;
		if MC2.Find('-') then
		  repeat
			//Quitar efectos remesados, impagos, etc...
			if ( (MC2."Document Status" = MC2."document status"::Open) and
				 (MC2."Document Situation" = MC2."document situation"::Cartera)
			   ) then begin
			  MCtemp.Init;
			  MCtemp.TransferFields(MC2);
			  MCtemp.Insert;
			  MC2.CalcFields(MC2."Remaining Amt. (LCY)");
			  total := total + MC2."Remaining Amt. (LCY)";
			end;
		  until (MC2.Next = 0);
		MC.CalcFields(MC."Remaining Amt. (LCY)");
		Descontar := (total > Abs(MC."Remaining Amt. (LCY)"));
		if Descontar then begin
		  //inserto el abono
		  MCtemp.Init;
		  MCtemp.TransferFields(MC);
		  MCtemp.Insert;
		  MC.CalcFields(MC."Remaining Amt. (LCY)");
		  total := total + MC."Remaining Amt. (LCY)";
		  //miro si se pueden descontar otros abonos
		  MC2.Reset;
		  MC2.SetCurrentkey(MC2."Customer No.",MC2.Open,MC2."Document Type",MC2."Posting Date");
		  MC2.SetRange("Customer No.",MC."Customer No.");
		  MC2.SetRange(Open,true);
		  MC2.SetRange("Document Type",MC2."document type"::"Credit Memo");
		  MC2.SetRange("Posting Date",fechaini,fechafin);
		  MC2.SetFilter(MC2."Entry No.",'<> %1',MC."Entry No.");
		  if MC2.Find('-') then
			repeat
				MCtemp.Init;
				MCtemp.TransferFields(MC2);
				MCtemp.Insert;
				MC2.CalcFields(MC2."Remaining Amt. (LCY)");
				total := total + MC2."Remaining Amt. (LCY)";
			until (total < 0) or (MC2.Next = 0);
		  //Ahora quitar las facturas o efectos que sobren en el descuento
		  if total > 0 then begin
			MCtemp.Reset;
			MCtemp.SetCurrentkey("Due Date","Customer No.",Positive,Open);
			MCtemp.SetFilter("Document Type",'%1 | %2',MCtemp."document type"::Invoice,MCtemp."document type"::Bill);
			if MCtemp.Find('+') then
			  repeat
				MCtemp.CalcFields(MCtemp."Remaining Amt. (LCY)");
				if MCtemp."Remaining Amt. (LCY)" < total then begin
				  total := total - MCtemp."Remaining Amt. (LCY)";
				  MCtemp.Delete;
				end;
			  until (MCtemp.Next(-1) = 0) or (total <= 0);
		  end;
		end;
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50210_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50210;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
