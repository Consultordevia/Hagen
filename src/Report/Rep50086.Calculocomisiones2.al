#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50086_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50086){}   
		type("System.IO.Path"; System_IO_Path50086) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50086 "_Calculo comisiones2"
{
	RDLCLayout = './Layouts/_Calculocomisiones2.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Salesperson/Purchaser";"Salesperson/Purchaser")
		{
			DataItemTableView = sorting(Code);
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column("Code"; "Salesperson/Purchaser".Code)
			{
			}
			column(Name; "Salesperson/Purchaser".Name)
			{
			}
			column(Salesperson_PurchaserCommissionPct; "Salesperson/Purchaser"."Commission %")
			{
			}
			column(USERID; UserId)
			{
			}
			column(ReportForNavPageNo; Format(ReportForNav.PageNo))
			{
			}
			column(COMPANYNAME; COMPANYNAME)
			{
			}
			column(TODAY_0_4; Format(Today,0,4))
			{
			}
			column(Ventas_portes; 'Ventas + portes')
			{
			}
			column(GLOBALVENTAS; GLOBALVENTAS)
			{
			}
			column(TotalComision; TotalComision)
			{
			}
			column(Comision; 'Comisión')
			{
			}
			column(Totalgeneral; 'Total general')
			{
			}
			column(TG; TG)
			{
			}
			column(tincre; tincre)
			{
			}
			column(Incremento; 'Incremento')
			{
			}
			column(TANTOTARMO_DIF; TANTOTARMO*DIF)
			{
			}
			column(MascomisionPct; 'Mas comision %')
			{
			}
			column(Portramo; 'Por tramo')
			{
			}
			column(Tramos; 'Tramos')
			{
			}
			column(Objetivo; 'Objetivo')
			{
			}
			column(TANTOTARMO; TANTOTARMO)
			{
			}
			column(DIF; DIF)
			{
			}
			column(TOTALVENTAV; TOTALVENTAV)
			{
			}
			column(TotalVenta; TotalVenta)
			{
			}
			column(Media; Media)
			{
				DecimalPlaces = 3:3;
			}
			dataitem("Sales Invoice Header";"Sales Invoice Header")
			{
				DataItemLink = "Salesperson Code"=field(Code);
				DataItemTableView = sorting("Posting Date");
				column(ReportForNavId_27; 27) {} // Autogenerated by ForNav - Do not delete
				dataitem("Sales Invoice Line";"Sales Invoice Line")
				{
					DataItemLink = "Document No."=field("No.");
					DataItemTableView = sorting("Document No.","Line No.");
					column(ReportForNavId_28; 28) {} // Autogenerated by ForNav - Do not delete
					column(COMILIN; COMILIN)
					{
					}
					column(MediaL; MediaL)
					{
						DecimalPlaces = 3:3;
					}
					column(TotalVenta2; TotalVenta)
					{
					}
					column(SalesInvoiceHeaderPostingDate; "Sales Invoice Header"."Posting Date")
					{
					}
					column(SalesInvoiceHeaderNo; "Sales Invoice Header"."No.")
					{
					}
					column(GenProdPostingGroup; "Sales Invoice Line"."Gen. Prod. Posting Group")
					{
					}
					column(TipoComision; TipoComision)
					{
					}
					column(ComisionLinea; ComisionLinea)
					{
					}
					column(TantoComision; TantoComision)
					{
					}
					column(SalesInvoiceLineVATBaseAmount; "Sales Invoice Line"."VAT Base Amount")
					{
					}
					column(Description; "Sales Invoice Line".Description)
					{
					}
					column(No; "Sales Invoice Line"."No.")
					{
					}
					column(SalesInvoiceHeaderSell_toCustomerNo; "Sales Invoice Header"."Sell-to Customer No.")
					{
					}
					column(SalesInvoiceHeaderSell_toCustomerName; "Sales Invoice Header"."Sell-to Customer Name")
					{
					}
					column(totalf1; totalf1)
					{
					}
					column(mediacomifac; mediacomifac)
					{
					}
					column(totalcomifac; totalcomifac)
					{
					}
					column(GLOBALVENTAS2; GLOBALVENTAS)
					{
					}
					column(TotalComision2; TotalComision)
					{
					}
					trigger OnAfterGetRecord();
					begin
						if "Sales Invoice Line".Quantity=0 then begin
							 CurrReport.Skip;
						end;
						GLOBALVENTAS:=GLOBALVENTAS+"Sales Invoice Line".Amount;
						if "Sales Invoice Line"."No."='62400000' then begin
							 CurrReport.Skip;
						end;
						TipoComision:='Vende';
						TantoComision:="Salesperson/Purchaser"."Commission %";
						if CUSTOMER."Comisión %"<>0 then begin
							 TantoComision:=CUSTOMER."Comisión %";
							 TipoComision:='Clie';
						end;
						Buscalineasfac;
						ComisionLinea:=ROUND("Sales Invoice Line"."VAT Base Amount"*TantoComision/100,0.01);
						TotalComision:=TotalComision+ComisionLinea;
						TotalVenta:=TotalVenta+"Sales Invoice Line"."VAT Base Amount";
						totalf1:=totalf1+"Sales Invoice Line"."VAT Base Amount";
						totalcomifac:=totalcomifac+ComisionLinea;
						COMILIN:=COMILIN+ComisionLinea;
						Rec83.Reset;
						Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
						Rec83.SetRange(Rec83."Journal Batch Name",UserId);
						Rec83.SetRange(Rec83.Quantity,TantoComision);
						if Rec83.FindFirst then begin
							 Rec83."Invoiced Quantity":=Rec83."Invoiced Quantity"+ComisionLinea;
							 Rec83."Unit Amount":=Rec83."Unit Amount"+"Sales Invoice Line"."VAT Base Amount";
							 Rec83.Quantity:=TantoComision;
							 Rec83.Modify;
						end;
						if not Rec83.FindFirst then begin
							 Rec83."Journal Template Name":='PRODUCTO';
							 Rec83."Journal Batch Name":=UserId;
							 LIN:=LIN+10000;
							 Rec83."Line No.":=LIN;
							 Rec83."Invoiced Quantity":=ComisionLinea;
							 Rec83."Unit Amount":="Sales Invoice Line"."VAT Base Amount";
							 Rec83.Quantity:=TantoComision;
							 Rec83.Insert;
						end;
					end;
					
				}
				trigger OnPreDataItem();
				begin
					"Sales Invoice Header".SetRange("Sales Invoice Header"."Posting Date",Desde,Hasta);
				end;
				
				trigger OnAfterGetRecord();
				begin
					totalf1:=0;
					totalcomifac:=0;
					CUSTOMER.Get("Sales Invoice Header"."Sell-to Customer No.");
				end;
				
			}
			dataitem("Sales Cr.Memo Header";"Sales Cr.Memo Header")
			{
				DataItemLink = "Salesperson Code"=field(Code);
				DataItemTableView = sorting("Posting Date");
				column(ReportForNavId_46; 46) {} // Autogenerated by ForNav - Do not delete
				dataitem("Sales Cr.Memo Line";"Sales Cr.Memo Line")
				{
					DataItemLink = "Document No."=field("No.");
					DataItemTableView = sorting("Document No.","Line No.");
					column(ReportForNavId_47; 47) {} // Autogenerated by ForNav - Do not delete
					column(MediaL2; MediaL)
					{
						DecimalPlaces = 3:3;
					}
					column(TotalVenta3; TotalVenta)
					{
					}
					column(COMILIN2; COMILIN)
					{
					}
					column(SalesCrMemoHeaderPostingDate; "Sales Cr.Memo Header"."Posting Date")
					{
					}
					column(SalesCrMemoHeaderNo; "Sales Cr.Memo Header"."No.")
					{
					}
					column(GenProdPostingGroup2; "Sales Cr.Memo Line"."Gen. Prod. Posting Group")
					{
					}
					column(TipoComision2; TipoComision)
					{
					}
					column(ComisionLinea2; ComisionLinea)
					{
					}
					column(TantoComision2; TantoComision)
					{
					}
					column(SalesCrMemoLineVATBaseAmount_1; "Sales Cr.Memo Line"."VAT Base Amount"*-1)
					{
					}
					column(Description2; "Sales Cr.Memo Line".Description)
					{
					}
					column(No2; "Sales Cr.Memo Line"."No.")
					{
					}
					column(SalesCrMemoHeaderSell_toCustomerNo; "Sales Cr.Memo Header"."Sell-to Customer No.")
					{
					}
					column(SalesCrMemoHeaderSell_toCustomerName; "Sales Cr.Memo Header"."Sell-to Customer Name")
					{
					}
					column(totalcomifac2; totalcomifac)
					{
					}
					column(mediacomifac2; mediacomifac)
					{
					}
					column(totalf12; totalf1)
					{
					}
					trigger OnAfterGetRecord();
					begin
						if "Sales Cr.Memo Line".Quantity=0 then begin
							 CurrReport.Skip;
						end;
						GLOBALVENTAS:=GLOBALVENTAS-"Sales Cr.Memo Line".Amount;
						if "Sales Cr.Memo Line"."No."='62400000' then begin
							 CurrReport.Skip;
						end;
						TipoComision:='Vende';
						TantoComision:="Salesperson/Purchaser"."Commission %";
						if CUSTOMER."Comisión %"<>0 then begin
							 TantoComision:=CUSTOMER."Comisión %";
							 TipoComision:='Clie';
						end;
						BuscaComision("Salesperson/Purchaser".Code,CUSTOMER."No.",CUSTOMER."Customer Posting Group","Sales Cr.Memo Line"."No.",
						"Sales Cr.Memo Line"."Gen. Prod. Posting Group");
						ComisionLinea:=ROUND("Sales Cr.Memo Line"."VAT Base Amount"*-1*TantoComision/100,0.01);
						TotalComision:=TotalComision+ComisionLinea;
						TotalVenta:=TotalVenta-"Sales Cr.Memo Line"."VAT Base Amount";
						totalf1:=totalf1-"Sales Cr.Memo Line"."VAT Base Amount";
						totalcomifac:=totalcomifac+ComisionLinea;
						COMILIN:=COMILIN+ComisionLinea;
						Rec83.Reset;
						Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
						Rec83.SetRange(Rec83."Journal Batch Name",UserId);
						Rec83.SetRange(Rec83.Quantity,TantoComision);
						if Rec83.FindFirst then begin
							 Rec83."Invoiced Quantity":=Rec83."Invoiced Quantity"+ComisionLinea;
							 Rec83."Unit Amount":=Rec83."Unit Amount"-"Sales Cr.Memo Line"."VAT Base Amount";
							 Rec83.Quantity:=TantoComision;
							 Rec83.Modify;
						end;
						if not Rec83.FindFirst then begin
							 Rec83."Journal Template Name":='PRODUCTO';
							 Rec83."Journal Batch Name":=UserId;
							 LIN:=LIN+10000;
							 Rec83."Line No.":=LIN;
							 Rec83."Invoiced Quantity":=+ComisionLinea;
							 Rec83."Unit Amount":=-"Sales Cr.Memo Line"."VAT Base Amount";
							 Rec83.Quantity:=TantoComision;
							 Rec83.Insert;
						end;
					end;
					
				}
				trigger OnPreDataItem();
				begin
					"Sales Cr.Memo Header".SetRange("Sales Cr.Memo Header"."Posting Date",Desde,Hasta);
				end;
				
				trigger OnAfterGetRecord();
				begin
					totalf1:=0;
					totalcomifac:=0;
					CUSTOMER.Get("Sales Cr.Memo Header"."Sell-to Customer No.");
				end;
				
			}
			dataitem("Item Journal Line";"Item Journal Line")
			{
				DataItemTableView = sorting("Journal Template Name","Journal Batch Name","Line No.");
				column(ReportForNavId_65; 65) {} // Autogenerated by ForNav - Do not delete
				column(Totalventa; 'Total venta')
				{
				}
				column(Impcomision; 'Imp. comisión')
				{
				}
				column(Porcentaje; 'Porcentaje')
				{
				}
				column(UnitAmount; "Item Journal Line"."Unit Amount")
				{
					DecimalPlaces = 2:2;
				}
				column(InvoicedQuantity; "Item Journal Line"."Invoiced Quantity")
				{
					DecimalPlaces = 2:2;
				}
				column(Quantity; "Item Journal Line".Quantity)
				{
					DecimalPlaces = 2:2;
				}
				trigger OnPreDataItem();
				begin
					"Item Journal Line".SetRange("Item Journal Line"."Journal Template Name",'PRODUCTO');
					"Item Journal Line".SetRange("Item Journal Line"."Journal Batch Name",UserId);
				end;
				
			}
			trigger OnPreDataItem();
			begin
				LastFieldNo := FieldNo(Code);
				Rec83.Reset;
				Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
				Rec83.SetRange(Rec83."Journal Batch Name",UserId);
				if Rec83.FindFirst then repeat
					 Rec83.Delete;
				until Rec83.Next=0;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(Desde;Desde)
					{
						ApplicationArea = Basic;
						Caption = 'Desde';
					}
					field(Hasta;Hasta)
					{
						ApplicationArea = Basic;
						Caption = 'Hasta';
					}
					field(sindetalle;sindetalle)
					{
						ApplicationArea = Basic;
						Caption = 'Sin detalle';
					}
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		Desde: Date;
		Hasta: Date;
		TantoComision: Decimal;
		ComisionLinea: Decimal;
		TotalComision: Decimal;
		TotalVenta: Decimal;
		Media: Decimal;
		RecRC: Record UnknownRecord50000;
		TipoComision: Code[20];
		Rec2: Record UnknownRecord50001;
		TOTALVENTAV: Decimal;
		INCRETRAMO: Decimal;
		TANTOTARMO: Decimal;
		CUANTOSTRAMOS: Decimal;
		DIF: Decimal;
		TG: Decimal;
		sindetalle: Boolean;
		tincre: Decimal;
		totalf1: Decimal;
		totalcomifac: Decimal;
		mediacomifac: Decimal;
		MediaL: Decimal;
		COMILIN: Decimal;
		Rec3: Record UnknownRecord50014;
		"AÑO": Integer;
		GLOBALVENTAS: Decimal;
		CUSTOMER: Record Customer;
		MES: Integer;
		Rec83: Record "Item Journal Line";
		LIN: Decimal;
		ventana: Dialog;

	procedure BuscaComision(VENDE: Code[10];CODCLIENTE: Code[20];GCC: Code[10];CODPROD: Code[20];GCP: Code[10])
	begin
	end;

	procedure Buscalineasfac()
	begin
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		if RecRC.FindFirst then repeat
				  if (RecRC.Familia='') and (RecRC.Subfamilia='') then begin
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
						  TantoComision:=RecRC."Comisión %";
						  TipoComision:='Esp.linea';
					 end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Invoice Line".Familia);
		if RecRC.FindFirst then repeat
				  if (RecRC.Subfamilia='') then begin
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
					   TantoComision:=RecRC."Comisión %";
					   TipoComision:='Esp.familia';
				  end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Invoice Line".Familia);
		RecRC.SetRange(RecRC.Subfamilia,"Sales Invoice Line".Subfamilia);
		if RecRC.FindFirst then repeat
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
			 TipoComision:='Esp.subfamilia';
			 end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Producto,"Sales Invoice Line"."No.");
		if RecRC.FindFirst then repeat
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
			 TipoComision:='Esp.producto';
			 end;
		until RecRC.Next=0;
		if CUSTOMER."Grupo clientes"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo cliente",CUSTOMER."Grupo clientes");
			 if RecRC.FindFirst then repeat
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
				  TipoComision:='Esp.Grupo';
				  end;
			 until RecRC.Next=0;
		end;
		if CUSTOMER."Grupo dto. cabecera"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo dto. cabecera",CUSTOMER."Grupo dto. cabecera");
			 if RecRC.FindFirst then repeat
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
				  TipoComision:='Esp.Grupo';
				  end;
			 until RecRC.Next=0;
		end;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Cliente,CUSTOMER."No.");
		if RecRC.FindFirst then repeat
					 if ("Sales Invoice Header"."Posting Date">=RecRC."Desde Fecha") and
						("Sales Invoice Header"."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
			 TipoComision:='Esp.Cliente';
			 end;
		until RecRC.Next=0;
	end;

	local procedure OnPreSectionTable13_GroupFooter2(var "Salesperson/Purchaser" : Record "Salesperson/Purchaser");
	begin
		with Table13 do begin
		  if not FooterPrinted then
			LastFieldNo := ReportForNav.TotalsCausedBy;
		  ReportForNav.ShowOutput := not FooterPrinted;
		  FooterPrinted := true;
		  AÑO:=Date2dmy(Desde,3);
		  MES:=Date2dmy(Desde,2);
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,0);
		  if Rec3.FindFirst then begin
			   if MES=1 then TOTALVENTAV:=Rec3.Enero;
			   if MES=2 then TOTALVENTAV:=Rec3.Febrero;
			   if MES=3 then TOTALVENTAV:=Rec3.Marzo;
			   if MES=4 then TOTALVENTAV:=Rec3.Abril;
			   if MES=5 then TOTALVENTAV:=Rec3.Mayo;
			   if MES=6 then TOTALVENTAV:=Rec3.Junio;
			   if MES=7 then TOTALVENTAV:=Rec3.Julio;
			   if MES=8 then TOTALVENTAV:=Rec3.Agosto;
			   if MES=9 then TOTALVENTAV:=Rec3.Septiembre;
			   if MES=10 then TOTALVENTAV:=Rec3.Octubre;
			   if MES=11 then TOTALVENTAV:=Rec3.Noviembre;
			   if MES=12 then TOTALVENTAV:=Rec3.Diciembre;
			   INCRETRAMO:=Rec3."Importe tramos";
			   TANTOTARMO:=Rec3."% Incremento por tramo";
		  end;
		  Media:=0;
		  if TotalVenta<>0 then begin
			   Media:=ROUND(TotalComision*100/TotalVenta,0.001);
		  end;
		  DIF:=TotalVenta-TOTALVENTAV;
		  if DIF<0 then begin
			   DIF:=0;
		  end;
		  if INCRETRAMO<>0 then begin
			   DIF:=ROUND(DIF/INCRETRAMO,1);
		  end;
		  tincre:=ROUND(((TANTOTARMO*DIF)*TotalVenta)/100,0.01);
		  TG:=ROUND(((TANTOTARMO*DIF)*TotalVenta)/100,0.01)+TotalComision;
		end;
	end;
	local procedure OnPreSectionTable112_Footer3(var "Sales Invoice Header" : Record "Sales Invoice Header");
	begin
		with Table112 do begin
		  ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable113_Body4(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput(not sindetalle);
		  MediaL:=0;
		  if TotalVenta<>0 then begin
			   MediaL:=ROUND(COMILIN*100/TotalVenta,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable113_Footer5(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable114_Footer7(var "Sales Cr.Memo Header" : Record "Sales Cr.Memo Header");
	begin
		with Table114 do begin
		   ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable115_Body8(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
			ReportForNav.ShowOutput(not sindetalle);
		  MediaL:=0;
		  if TotalVenta<>0 then begin
			   MediaL:=ROUND(COMILIN*100/TotalVenta,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable115_Footer9(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
		   ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50086_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50086;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
