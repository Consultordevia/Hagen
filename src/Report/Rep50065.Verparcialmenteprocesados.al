#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50065_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50065){}   
		type("System.IO.Path"; System_IO_Path50065) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50065 "Ver parcialmente procesados"
{
	RDLCLayout = './Layouts/Verparcialmenteprocesados.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Purch. Rcpt. Line";"Purch. Rcpt. Line")
		{
			DataItemTableView = sorting("Document No.","Line No.");
			RequestFilterFields = "Document No.";
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(USERID; UserId)
			{
			}
			column(ReportForNavPageNo; Format(ReportForNav.PageNo))
			{
			}
			column(COMPANYNAME; COMPANYNAME)
			{
			}
			column(TODAY_0_4; Format(Today,0,4))
			{
			}
			column(Quantity; "Purch. Rcpt. Line".Quantity)
			{
			}
			column(Description; "Purch. Rcpt. Line".Description)
			{
			}
			column(No; "Purch. Rcpt. Line"."No.")
			{
			}
			dataitem("Sales Line";"Sales Line")
			{
				DataItemLink = "No."=field("No.");
				DataItemTableView = sorting("Document Type","No.","Sell-to Customer No.") where("Document Type"=const(Quote));
				column(ReportForNavId_9; 9) {} // Autogenerated by ForNav - Do not delete
				column(NOMBREVENDE; NOMBREVENDE)
				{
				}
				column(DocumentNo; "Sales Line"."Document No.")
				{
				}
				column(Codclie; "Sales Line"."Sell-to Customer No.")
				{
				}
				column(Nombrecliente; nombrecliente)
				{
				}
				column(Grupoclientes; "Sales Line"."Grupo clientes")
				{
				}
				column(CantidadPdte; "Sales Line"."Outstanding Quantity")
				{
				}
				column(FechaAlta; "Sales Line"."Fecha alta")
				{
				}
				trigger OnAfterGetRecord();
				begin
					NOMBREVENDE:='';
					if RecCV.Get("Sales Line"."Document Type","Sales Line"."Document No.") then begin
						 if RecVen.Get(RecCV."Salesperson Code") then begin
							  NOMBREVENDE:=RecVen.Name;
						 end;
					end;
					GRUPOCLI:='';
					nombrecliente:='';
					if RecCusto.Get("Sales Line"."Sell-to Customer No.") then begin
						nombrecliente:=RecCusto.Name;
						GRUPOCLI:=RecCusto."Grupo clientes";
					end;
					/*
						 fnCrearCelda('A' + FORMAT(intFila),FORMAT("Sales Line"."No."));
						 fnCrearCelda('B' + FORMAT(intFila),FORMAT("Sales Line".Description));
						 fnCrearCelda('C' + FORMAT(intFila),FORMAT(NOMBREVENDE));
						 fnCrearCelda('D' + FORMAT(intFila),FORMAT("Sales Line"."Sell-to Customer No."));
						 fnCrearCelda('E' + FORMAT(intFila),FORMAT(nombrecliente));
						 fnCrearCelda('F' + FORMAT(intFila),FORMAT(GRUPOCLI));
						 fnCrearCelda('G' + FORMAT(intFila),FORMAT("Sales Line"."Outstanding Quantity"));
						 fnCrearCelda('H' + FORMAT(intFila),FORMAT("Sales Line"."Document No."));
					intFila:=intFila+1;
					*/
				
				end;
				
			}
			trigger OnPreDataItem();
			begin
				LastFieldNo := FieldNo("Document No.");
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		
		;ReportsForNavPre;
		
		/*  fnCrearHoja('ENTRADA ROTURAS',90);
		  fnCrearCelda('A' + FORMAT(intFila),'Producto');
		  fnCrearCelda('B' + FORMAT(intFila),'Descripcion');
		  fnCrearCelda('C' + FORMAT(intFila),'Vendedor');
		  fnCrearCelda('D' + FORMAT(intFila),'Cliente');
		  fnCrearCelda('E' + FORMAT(intFila),'Nombre cliente');
		  fnCrearCelda('F' + FORMAT(intFila),'Grupo cliente');
		  fnCrearCelda('G' + FORMAT(intFila),'Cantidad pdte.');
		  fnCrearCelda('H' + FORMAT(intFila),'Oferta');
		  intFila := intFila + 1;
		*/

	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		nombrecli: Text[50];
		RecCusto: Record Customer;
		autXLApp: Automation ;
		autXLLibros: Automation ;
		autXLLibro: Automation ;
		autXLHojas: Automation ;
		autXLHoja: Automation ;
		autXLGraficos: Automation ;
		autXLGrafico: Automation ;
		autXLChart: Automation ;
		autXLRango: Automation ;
		autXLSeries: Automation ;
		autXLEjes: Automation ;
		autXLEjes1: Automation ;
		autXLSerieColeccion: Automation ;
		intFila: Integer;
		NOMBREVENDE: Text[30];
		RecVen: Record "Salesperson/Purchaser";
		nombrecliente: Text[50];
		RecCV: Record "Sales Header";
		GRUPOCLI: Code[20];

	local procedure OnPreSectionTable121_GroupHeader3(var "Purch. Rcpt. Line" : Record "Purch. Rcpt. Line");
	begin
		with "Purch. Rcpt. Line" do begin
		end;// Autogenerated by ForNav;
	end;
	local procedure OnPreSectionTable121_GroupHeader4(var "Purch. Rcpt. Line" : Record "Purch. Rcpt. Line");
	begin
		with "Purch. Rcpt. Line" do begin
		end;// Autogenerated by ForNav;
	end;
	local procedure OnPreSectionTable121_GroupHeader5(var "Purch. Rcpt. Line" : Record "Purch. Rcpt. Line");
	begin
		with "Purch. Rcpt. Line" do begin
		end;// Autogenerated by ForNav;
	end;
	local procedure OnPreSectionTable121_GroupFooter7(var "Purch. Rcpt. Line" : Record "Purch. Rcpt. Line");
	begin
		with "Purch. Rcpt. Line" do begin
		end;// Autogenerated by ForNav;
	end;
	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50065_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50065;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
