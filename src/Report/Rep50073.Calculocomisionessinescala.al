#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50073_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50073){}   
		type("System.IO.Path"; System_IO_Path50073) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50073 "_Calculo comisiones sin escala"
{
	RDLCLayout = './Layouts/_Calculocomisionessinescala.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Salesperson/Purchaser";"Salesperson/Purchaser")
		{
			DataItemTableView = sorting(Code);
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(tipocomi; tipocomi)
			{
			}
			column("Code"; "Salesperson/Purchaser".Code)
			{
			}
			column(Name; "Salesperson/Purchaser".Name)
			{
			}
			column(Salesperson_PurchaserCommissionPct; "Salesperson/Purchaser"."Commission %")
			{
			}
			column(USERID; UserId)
			{
			}
			column(ReportForNavPageNo; Format(ReportForNav.PageNo))
			{
			}
			column(COMPANYNAME; COMPANYNAME)
			{
			}
			column(TODAY_0_4; Format(Today,0,4))
			{
			}
			column(divisor; divisor)
			{
			}
			column(textoaumento; textoaumento)
			{
			}
			column(aumneto; aumneto)
			{
			}
			column(Totalrecupera; Totalrecupera)
			{
			}
			column(tantorecu; tantorecu)
			{
				DecimalPlaces = 2:2;
			}
			column(RECUPERADOS; 'RECUPERADOS')
			{
			}
			column(recuperadosmes; recuperadosmes)
			{
			}
			column(impagadosmes; impagadosmes)
			{
			}
			column(IMPAGADOS; 'IMPAGADOS')
			{
			}
			column(color; color)
			{
				DecimalPlaces = 3:3;
			}
			column(MEDIA2; MEDIA2)
			{
				DecimalPlaces = 3:3;
			}
			column(TOTASUMA2; TOTASUMA2)
			{
				DecimalPlaces = 3:3;
			}
			column(Entregadoacuenta; 'Entregado a cuenta')
			{
			}
			column(entregadoaceunta; entregadoaceunta)
			{
			}
			column(Totalgeneral; 'Total general')
			{
			}
			column(TOTALC; TOTALC)
			{
			}
			column(Ventas_portes; 'Ventas + portes')
			{
			}
			column(GLOBALVENTAS; GLOBALVENTAS)
			{
			}
			column(TotalComision_TOTASUMA2_TotalImpaga_Totalrecupera; TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)
			{
			}
			column(ComisionTOTAL; 'Comisión TOTAL')
			{
			}
			column(Objetivo; 'Objetivo')
			{
			}
			column(TOTALVENTAV; TOTALVENTAV)
			{
			}
			column(TotalVenta; TotalVenta)
			{
			}
			column(tantoimpa; tantoimpa)
			{
				DecimalPlaces = 2:2;
			}
			column(TotalImpaga; TotalImpaga)
			{
			}
			dataitem("Sales Invoice Line";"Sales Invoice Line")
			{
				DataItemLink = "Shortcut Dimension 1 Code"=field(Code);
				DataItemTableView = sorting("Shortcut Dimension 1 Code","Fecha factura","Document No.");
				column(ReportForNavId_35; 35) {} // Autogenerated by ForNav - Do not delete
				column(comiporlinCOP; comiporlinCOP)
				{
					DecimalPlaces = 3:3;
				}
				column(exentocolores; exentocolores)
				{
				}
				column(color2; color)
				{
				}
				column(REC112Sell_toCustomerName; REC112."Sell-to Customer Name")
				{
				}
				column(comiporlin; comiporlin)
				{
					DecimalPlaces = 3:3;
				}
				column(sumaporlin; sumaporlin)
				{
					DecimalPlaces = 3:3;
				}
				column(TotalVenta2; TotalVenta)
				{
				}
				column(REC112PostingDate; REC112."Posting Date")
				{
				}
				column(REC112No; REC112."No.")
				{
				}
				column(GenProdPostingGroup; "Sales Invoice Line"."Gen. Prod. Posting Group")
				{
				}
				column(TipoComision; TipoComision)
				{
				}
				column(ComisionLinea; ComisionLinea)
				{
					DecimalPlaces = 3:3;
				}
				column(TantoComision; TantoComision)
				{
				}
				column(SalesInvoiceLineVATBaseAmount; "Sales Invoice Line"."VAT Base Amount")
				{
				}
				column(Description; "Sales Invoice Line".Description)
				{
				}
				column(No; "Sales Invoice Line"."No.")
				{
				}
				column(mediacomifac; mediacomifac)
				{
					DecimalPlaces = 2:2;
				}
				column(REC112Sell_toCustomerNo; REC112."Sell-to Customer No.")
				{
				}
				column(totalf1; totalf1)
				{
				}
				column(mediacomifac1; mediacomifac1)
				{
				}
				column(totalcomifac; totalcomifac)
				{
					DecimalPlaces = 3:3;
				}
				column(tantocom2; tantocom2)
				{
					DecimalPlaces = 2:2;
				}
				column(sumaporlin3; sumaporlin3)
				{
					DecimalPlaces = 3:3;
				}
				column(GLOBALVENTAS2; GLOBALVENTAS)
				{
				}
				column(TotalComision_TOTASUMA2_TotalImpaga_Totalrecupera2; TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)
				{
				}
				trigger OnPreDataItem();
				begin
					"Sales Invoice Line".SetRange("Sales Invoice Line"."Fecha factura",Desde,Hasta);
					if ProdHagen then begin
						 "Sales Invoice Line".SetRange("Sales Invoice Line"."Producto Hagen",true);
					end;
					if ProdNoHagen then begin
						 "Sales Invoice Line".SetRange("Sales Invoice Line"."Producto Hagen",false);
					end;
						 totalf1:=0;
						 totalcomifac:=0;
						 contalin:=0;
						 sumamar:=0;
						 contalin2:=0;
				end;
				
				trigger OnAfterGetRecord();
				begin
					if ProdHagen then begin
						 "Sales Invoice Line".SetRange("Sales Invoice Line"."Producto Hagen",true);
					end;
					if ProdNoHagen then begin
						 "Sales Invoice Line".SetRange("Sales Invoice Line"."Producto Hagen",false);
					end;
					if NDOC<>"Sales Invoice Line"."Document No." then begin
						 totalf1:=0;
						 totalcomifac:=0;
						 contalin:=0;
						 COMILIN:=0;
						 sumamar:=0;
						 sumacostes:=0;
						 sumaventas:=0;
						 sumaporlin:=0;
						 sumaporlin:=0;
						 EXENTOGRUPO:=false;
						 NDOC:="Sales Invoice Line"."Document No.";
					end;
					if "Sales Invoice Line".Quantity=0 then begin
						 CurrReport.Skip;
					end;
					GLOBALVENTAS:=GLOBALVENTAS+"Sales Invoice Line".Amount;
					if "Sales Invoice Line"."No."='62400000' then begin
						 CurrReport.Skip;
					end;
					REC112.Get("Sales Invoice Line"."Document No.");
					CUSTOMER.Get("Sales Invoice Line"."Sell-to Customer No.");
					TipoComision:='Vende';
					TantoComision:="Salesperson/Purchaser"."Commission %";
					if ProdHagen then begin
						 TantoComision:="Salesperson/Purchaser"."% Comisión Hagen";
					end;
					if ProdNoHagen then begin
						 TantoComision:="Salesperson/Purchaser"."% Comisión NO Hagen";
					end;
					if CUSTOMER."Comisión %"<>0 then begin
						 TantoComision:=CUSTOMER."Comisión %";
						 TipoComision:='Clie';
					end;
					Buscalineasfac;
					ComisionLinea:=ROUND("Sales Invoice Line"."VAT Base Amount"*TantoComision/100,0.001);
					TotalComision:=TotalComision+ComisionLinea;
					TotalVenta:=TotalVenta+"Sales Invoice Line"."VAT Base Amount";
					totalf1:=totalf1+"Sales Invoice Line"."VAT Base Amount";
					totalcomifac:=totalcomifac+ComisionLinea;
							  color:='EXENTO';
						 exentocolores:=false;
						 if RecItem.Get("Sales Invoice Line"."No.") then begin
							  if RecItem."Exento comision color" then begin
								   exentocolores:=true;
							  end;
						 end;
						 if not exentocolores then begin
							  if not "Sales Invoice Line".Defectuosos then begin
								   sumacostes:=sumacostes+"Sales Invoice Line"."Unit Cost (LCY)"*"Sales Invoice Line".Quantity;
								   sumaventas:=sumaventas+"Sales Invoice Line"."VAT Base Amount";
							  end;
							  color:='ROJO';
							  margenlin:=0;
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO";
							  if ProdHagen then begin
								   tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
							  end;
							  if ProdNoHagen then begin
								   tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
							  end;
							  if "Sales Invoice Line"."VAT Base Amount"<>0 then begin
								   margenlin:=(100-(100*("Sales Invoice Line"."Unit Cost (LCY)"
								   *"Sales Invoice Line".Quantity)/("Sales Invoice Line"."VAT Base Amount")));
								   sumamar:=sumamar+margenlin;
								   contalin:=contalin+1;
								   contalin2:=contalin2+1;
							  end;
							  if (margenlin>=TDESDE[2]) then begin
								   tantocom2:="Salesperson/Purchaser"."Comision MORADO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
								   end;
								   color:='MORADO';
							  end;
							  if (margenlin>=TDESDE[3]) then begin
								   tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
								   end;
								   color:='AMARILLO';
							  end;
							  if (margenlin>=TDESDE[4]) then begin
								   tantocom2:="Salesperson/Purchaser"."Comision AZUL";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
								   end;
								   color:='AZUL';
							  end;
							  if (margenlin>=TDESDE[5]) then begin
								   tantocom2:="Salesperson/Purchaser"."Comision VERDE";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
								   end;
								   color:='VERDE';
							  end;
							  if "Sales Invoice Line".Defectuosos then begin
								   color:='VERDE';
								   tantocom2:="Salesperson/Purchaser"."Comision VERDE";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
								   end;
							  end;
						 end;
						 if not exentocolores then begin
							  COMILIN:=COMILIN+ComisionLinea;
						 end;
					/*
					IF MetodoCal=1 THEN BEGIN
						 nfac:="Sales Invoice Line"."Document No.";
						 BuscaColorFac;
							  IF "Sales Invoice Line"."VAT Base Amount"<>0 THEN BEGIN
							   margenlin:=(100-(100*("Sales Invoice Line"."Unit Cost (LCY)"
							   *"Sales Invoice Line".Quantity)/("Sales Invoice Line"."VAT Base Amount")));
							  END;
							   sumamar:=sumamar+margenlin;
							   contalin:=contalin+1;
							   contalin2:=contalin2+1;
							  IF color='ROJO' THEN BEGIN
								   margenlin:=0;
								   tantocom2:="Salesperson/Purchaser"."Comision ROJO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
								   end;
							  END;
							  IF color='MORADO' THEN BEGIN
								   tantocom2:="Salesperson/Purchaser"."Comision MORADO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
								   end;
							  END;
							  IF color='AMARILLO' THEN BEGIN
								   tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
								   end;
							  END;
							  IF color='AZUL' THEN BEGIN
								   tantocom2:="Salesperson/Purchaser"."Comision AZUL";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
								   end;
							  END;
							  IF color='VERDE' THEN BEGIN
								   tantocom2:="Salesperson/Purchaser"."Comision VERDE";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
								   end;
							  END;
					END;
					*/
					Rec83.Reset;
					Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
					Rec83.SetRange(Rec83."Journal Batch Name",UserId);
					Rec83.SetRange(Rec83.Quantity,TantoComision);
					if Rec83.FindFirst then begin
						 Rec83."Invoiced Quantity":=Rec83."Invoiced Quantity"+ComisionLinea;
						 Rec83."Unit Amount":=Rec83."Unit Amount"+"Sales Invoice Line"."VAT Base Amount";
						 Rec83.Quantity:=TantoComision;
						 Rec83.Modify;
					end;
					if not Rec83.FindFirst then begin
						 Rec83."Journal Template Name":='PRODUCTO';
						 Rec83."Journal Batch Name":=UserId;
						 LIN:=LIN+10000;
						 Rec83."Line No.":=LIN;
						 Rec83."Invoiced Quantity":=ComisionLinea;
						 Rec83."Unit Amount":="Sales Invoice Line"."VAT Base Amount";
						 Rec83.Quantity:=TantoComision;
						 Rec83.Insert;
					end;
				
				end;
				
			}
			dataitem("Sales Cr.Memo Line";"Sales Cr.Memo Line")
			{
				DataItemLink = "Shortcut Dimension 1 Code"=field(Code);
				DataItemTableView = sorting("Shortcut Dimension 1 Code","Fecha abono","Document No.");
				column(ReportForNavId_59; 59) {} // Autogenerated by ForNav - Do not delete
				column(comiporlinCOP2; comiporlinCOP)
				{
					DecimalPlaces = 3:3;
				}
				column(color5; color)
				{
				}
				column(REC114Sell_toCustomerName; REC114."Sell-to Customer Name")
				{
				}
				column(sumaporlin4; sumaporlin)
				{
					DecimalPlaces = 3:3;
				}
				column(TotalVenta3; TotalVenta)
				{
				}
				column(comiporlin2; comiporlin)
				{
					DecimalPlaces = 3:3;
				}
				column(REC114PostingDate; REC114."Posting Date")
				{
				}
				column(REC114No; REC114."No.")
				{
				}
				column(GenProdPostingGroup2; "Sales Cr.Memo Line"."Gen. Prod. Posting Group")
				{
				}
				column(TipoComision2; TipoComision)
				{
				}
				column(ComisionLinea2; ComisionLinea)
				{
					DecimalPlaces = 3:3;
				}
				column(TantoComision2; TantoComision)
				{
				}
				column(SalesCrMemoLineVATBaseAmount_1; "Sales Cr.Memo Line"."VAT Base Amount"*-1)
				{
				}
				column(Description2; "Sales Cr.Memo Line".Description)
				{
				}
				column(No2; "Sales Cr.Memo Line"."No.")
				{
				}
				column(mediacomifac2; mediacomifac)
				{
					DecimalPlaces = 2:2;
				}
				column(REC114Sell_toCustomerNo; REC114."Sell-to Customer No.")
				{
				}
				column(totalf13; totalf1)
				{
				}
				column(totalcomifac3; totalcomifac)
				{
					DecimalPlaces = 3:3;
				}
				column(mediacomifac13; mediacomifac1)
				{
				}
				column(sumaporlin32; sumaporlin3)
				{
					DecimalPlaces = 3:3;
				}
				column(tantocom22; tantocom2)
				{
					DecimalPlaces = 2:2;
				}
				trigger OnPreDataItem();
				begin
					"Sales Cr.Memo Line".SetRange("Sales Cr.Memo Line"."Fecha abono",Desde,Hasta);
					if ProdHagen then begin
						 "Sales Cr.Memo Line".SetRange("Sales Cr.Memo Line"."Producto Hagen",true);
					end;
					if ProdNoHagen then begin
						 "Sales Cr.Memo Line".SetRange("Sales Cr.Memo Line"."Producto Hagen",false);
					end;
				end;
				
				trigger OnAfterGetRecord();
				begin
					if ProdHagen then begin
						 "Sales Cr.Memo Line".SetRange("Sales Cr.Memo Line"."Producto Hagen",true);
					end;
					if ProdNoHagen then begin
						 "Sales Cr.Memo Line".SetRange("Sales Cr.Memo Line"."Producto Hagen",false);
					end;
					if NDOC<>"Sales Cr.Memo Line"."Document No." then begin
						 totalf1:=0;
						 totalcomifac:=0;
						 contalin:=0;
						 COMILIN:=0;
						 sumamar:=0;
						 sumacostes:=0;
						 sumaventas:=0;
						 sumaporlin:=0;
						 sumaporlin:=0;
						 EXENTOGRUPO:=false;
						 NDOC:="Sales Invoice Line"."Document No.";
						 NDOC:="Sales Cr.Memo Line"."Document No.";
					end;
					if "Sales Cr.Memo Line".Quantity=0 then begin
						 CurrReport.Skip;
					end;
					GLOBALVENTAS:=GLOBALVENTAS-"Sales Cr.Memo Line".Amount;
					if "Sales Cr.Memo Line"."No."='62400000' then begin
						 CurrReport.Skip;
					end;
					REC114.Get("Sales Cr.Memo Line"."Document No.");
					CUSTOMER.Get("Sales Cr.Memo Line"."Sell-to Customer No.");
					TipoComision:='Vende';
					TantoComision:="Salesperson/Purchaser"."Commission %";
					if ProdHagen then begin
						 TantoComision:="Salesperson/Purchaser"."% Comisión Hagen";
					end;
					if ProdNoHagen then begin
						 TantoComision:="Salesperson/Purchaser"."% Comisión NO Hagen";
					end;
					if CUSTOMER."Comisión %"<>0 then begin
						 TantoComision:=CUSTOMER."Comisión %";
						 TipoComision:='Clie';
					end;
					BuscaComision("Salesperson/Purchaser".Code,CUSTOMER."No.",CUSTOMER."Customer Posting Group","Sales Cr.Memo Line"."No.",
					"Sales Cr.Memo Line"."Gen. Prod. Posting Group");
					Buscalineasabo;
					ComisionLinea:=ROUND("Sales Cr.Memo Line"."VAT Base Amount"*-1*TantoComision/100,0.001);
					TotalComision:=TotalComision+ComisionLinea;
					TotalVenta:=TotalVenta-"Sales Cr.Memo Line"."VAT Base Amount";
					totalf1:=totalf1-"Sales Cr.Memo Line"."VAT Base Amount";
					totalcomifac:=totalcomifac+ComisionLinea;
							  color:='EXENTO';
					exentocolores:=false;
					if RecItem.Get("Sales Cr.Memo Line"."No.") then begin
						 if RecItem."Exento comision color" then begin
							  exentocolores:=true;
						 end;
					end;
					if not exentocolores then begin
							  color:='ROJO';
					margenlin:=0;
						 tantocom2:="Salesperson/Purchaser"."Comision ROJO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
						 end;
						 if not "Sales Cr.Memo Line".Defectuosos then begin
							  sumacostes:=sumacostes+"Sales Cr.Memo Line"."Unit Cost (LCY)"*"Sales Cr.Memo Line".Quantity;
							  sumaventas:=sumaventas+"Sales Cr.Memo Line"."VAT Base Amount";
						 end;
						 if "Sales Cr.Memo Line"."VAT Base Amount"<>0 then begin
							  margenlin:=(100-(100*("Sales Cr.Memo Line"."Unit Cost (LCY)"
							  *"Sales Cr.Memo Line".Quantity)/("Sales Cr.Memo Line"."VAT Base Amount")));
							  sumamar:=sumamar+margenlin;
							  contalin:=contalin+1;
						 end;
						 if (margenlin>=TDESDE[2]) then begin
							  color:='MORADO';
							 tantocom2:="Salesperson/Purchaser"."Comision MORADO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
								   end;
						 end;
						 if (margenlin>=TDESDE[3]) then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
								   end;
							  color:='AMARILLO';
						 end;
						 if (margenlin>=TDESDE[4]) then begin
							  color:='AZUL';
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
								   end;
						 end;
						 if (margenlin>=TDESDE[5]) then begin
							  color:='VERDE';
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
								   end;
						 end;
						 if "Sales Cr.Memo Line".Defectuosos then begin
							  color:='VERDE';
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE";
								   if ProdHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
								   end;
								   if ProdNoHagen then begin
										tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
								   end;
						 end;
					end;
					if not exentocolores then begin
						 COMILIN:=COMILIN+ComisionLinea;
					end;
					Rec83.Reset;
					Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
					Rec83.SetRange(Rec83."Journal Batch Name",UserId);
					Rec83.SetRange(Rec83.Quantity,TantoComision);
					if Rec83.FindFirst then begin
						 Rec83."Invoiced Quantity":=Rec83."Invoiced Quantity"+ComisionLinea;
						 Rec83."Unit Amount":=Rec83."Unit Amount"-"Sales Cr.Memo Line"."VAT Base Amount";
						 Rec83.Quantity:=TantoComision;
						 Rec83.Modify;
					end;
					if not Rec83.FindFirst then begin
						 Rec83."Journal Template Name":='PRODUCTO';
						 Rec83."Journal Batch Name":=UserId;
						 LIN:=LIN+10000;
						 Rec83."Line No.":=LIN;
						 Rec83."Invoiced Quantity":=+ComisionLinea;
						 Rec83."Unit Amount":=-"Sales Cr.Memo Line"."VAT Base Amount";
						 Rec83.Quantity:=TantoComision;
						 Rec83.Insert;
					end;
				end;
				
			}
			dataitem("Item Journal Line";"Item Journal Line")
			{
				DataItemTableView = sorting("Journal Template Name","Journal Batch Name","Line No.");
				column(ReportForNavId_82; 82) {} // Autogenerated by ForNav - Do not delete
				column(Totalventa; 'Total venta')
				{
				}
				column(Impcomision; 'Imp. comisión')
				{
				}
				column(Porcentaje; 'Porcentaje')
				{
				}
				column(UnitAmount; "Item Journal Line"."Unit Amount")
				{
					DecimalPlaces = 2:2;
				}
				column(InvoicedQuantity; "Item Journal Line"."Invoiced Quantity")
				{
					DecimalPlaces = 2:2;
				}
				column(Quantity; "Item Journal Line".Quantity)
				{
					DecimalPlaces = 2:2;
				}
				trigger OnPreDataItem();
				begin
					"Item Journal Line".SetRange("Item Journal Line"."Journal Template Name",'PRODUCTO');
					"Item Journal Line".SetRange("Item Journal Line"."Journal Batch Name",UserId);
				end;
				
			}
			trigger OnPreDataItem();
			begin
				LastFieldNo := FieldNo(Code);
				if (ProdHagen) and (ProdNoHagen) then begin
					 Error('Solo puedes marcar o Hagen o No Hagen.');
				end;
				Rec83.Reset;
				Rec83.SetRange(Rec83."Journal Template Name",'PRODUCTO');
				Rec83.SetRange(Rec83."Journal Batch Name",UserId);
				if Rec83.FindFirst then repeat
					 Rec83.Delete;
				until Rec83.Next=0;
			end;
			
			trigger OnAfterGetRecord();
			begin
				impagados2013:=0;
				impagados2014:=0;
				RecCliente.Reset;
				RecCliente.SetRange(RecCliente."Salesperson Code","Salesperson/Purchaser".Code);
				RecCliente.SetRange(RecCliente."Date Filter",20000101D,20131231D);
				if RecCliente.FindFirst then repeat
					 RecCliente.CalcFields(RecCliente."Impgado periodo");
					 impagados2013:=impagados2013+RecCliente."Impgado periodo";
				until RecCliente.Next=0;
				RecCliente.Reset;
				RecCliente.SetRange(RecCliente."Salesperson Code","Salesperson/Purchaser".Code);
				RecCliente.SetRange(RecCliente."Date Filter",Desde,Hasta);
				if RecCliente.FindFirst then repeat
					 RecCliente.CalcFields(RecCliente."Impgado periodo");
					 impagados2014:=impagados2014+RecCliente."Impgado periodo";
				until RecCliente.Next=0;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(Desde;Desde)
					{
						ApplicationArea = Basic;
						Caption = 'Desde';
					}
					field(Hasta;Hasta)
					{
						ApplicationArea = Basic;
						Caption = 'Hasta';
					}
					field(sindetalle;sindetalle)
					{
						ApplicationArea = Basic;
						Caption = 'Sin detalle';
					}
					field(MetodoCal;MetodoCal)
					{
						ApplicationArea = Basic;
						Caption = 'Metodo calculo';
						Visible = false;
					}
					field(ProdHagen;ProdHagen)
					{
						ApplicationArea = Basic;
						Caption = 'Productos Hagen';
					}
					field(ProdNoHagen;ProdNoHagen)
					{
						ApplicationArea = Basic;
						Caption = 'Productos No-Hagen';
					}
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

		trigger OnOpenPage()
		begin
			sindetalle:=true;
		end;

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		if UpperCase(UserId)='OSCAR' then begin
			 Clear(FILE);
			 rut:='c:\tmp\';
			 ArchExt4:=rut+'comisiones.csv';
			 ArchSalida4.TextMode := true;
			 ArchSalida4.WriteMode := true;
			 ArchSalida4.Create(ArchExt4);
		end;
		RecConfV.Get;
		TDESDE[1]:=RecConfV."Desde 1";
		THASTA[1]:=RecConfV."Hasta 1";
		TDESDE[2]:=RecConfV."Desde 2";
		THASTA[2]:=RecConfV."Hasta 2";
		TDESDE[3]:=RecConfV."Desde 3";
		THASTA[3]:=RecConfV."Hasta 3";
		TDESDE[4]:=RecConfV."Desde 4";
		THASTA[4]:=RecConfV."Hasta 4";
		TDESDE[5]:=RecConfV."Desde 5";
		THASTA[5]:=RecConfV."Hasta 5";
		if ProdHagen then tipocomi:='Productos Hagen';
		if ProdNoHagen then tipocomi:='Productos No Hagen';
		;ReportsForNavPre;
	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		Desde: Date;
		Hasta: Date;
		TantoComision: Decimal;
		ComisionLinea: Decimal;
		TotalComision: Decimal;
		TotalVenta: Decimal;
		Media: Decimal;
		RecRC: Record UnknownRecord50000;
		TipoComision: Code[20];
		Rec2: Record UnknownRecord50001;
		TOTALVENTAV: Decimal;
		INCRETRAMO: Decimal;
		TANTOTARMO: Decimal;
		CUANTOSTRAMOS: Decimal;
		DIF: Decimal;
		TG: Decimal;
		sindetalle: Boolean;
		tincre: Decimal;
		totalf1: Decimal;
		totalcomifac: Decimal;
		mediacomifac: Decimal;
		MediaL: Decimal;
		COMILIN: Decimal;
		Rec3: Record UnknownRecord50014;
		"AÑO": Integer;
		GLOBALVENTAS: Decimal;
		CUSTOMER: Record Customer;
		MES: Integer;
		Rec83: Record "Item Journal Line";
		LIN: Decimal;
		ventana: Dialog;
		REC112: Record "Sales Invoice Header";
		REC114: Record "Sales Cr.Memo Header";
		NDOC: Code[20];
		entregadoaceunta: Decimal;
		Rec33: Record UnknownRecord50014;
		DTM3: Decimal;
		DTM2: Decimal;
		DTM1: Decimal;
		HTM3: Decimal;
		HTM2: Decimal;
		HTM1: Decimal;
		suma1: Decimal;
		color: Code[10];
		margenlin: Decimal;
		TDESDE: array [5] of Decimal;
		CUANTALIN: Integer;
		MEDIACOL: Decimal;
		RecConfV: Record "Sales & Receivables Setup";
		THASTA: array [5] of Decimal;
		sumamar: Decimal;
		contalin: Integer;
		tantocom2: Decimal;
		totalcomi2: Decimal;
		TOTASUMA2: Decimal;
		MEDIA2: Decimal;
		impagados2013: Decimal;
		impagados2014: Decimal;
		RecCliente: Record Customer;
		TotalComisionImp: Decimal;
		impagadosmes: Decimal;
		recuperadosmes: Decimal;
		tantorecu: Decimal;
		tantoimpa: Decimal;
		TotalImpaga: Decimal;
		Totalrecupera: Decimal;
		exentocolores: Boolean;
		RecItem: Record Item;
		datoa: Decimal;
		datob: Decimal;
		divisor: Decimal;
		aumneto: Decimal;
		textoaumento: Text[30];
		TOTALC: Decimal;
		sumacostes: Decimal;
		sumaventas: Decimal;
		contalin2: Integer;
		EXENTOGRUPO: Boolean;
		comiporlin: Decimal;
		sumaporlin: Decimal;
		comiporlinCOP: Decimal;
		mediacomifac1: Decimal;
		SUMA: Boolean;
		SUMAPB: Decimal;
		SUMAPF: Decimal;
		sumacventas: Decimal;
		Rec113: Record "Sales Invoice Line";
		nfac: Code[20];
		MetodoCal: Option Factura;
		CUANTALIN2: Decimal;
		SUMA2: Boolean;
		SUMAPB2: Decimal;
		margenlin2: Decimal;
		SUMAPF2: Decimal;
		sumacostes2: Decimal;
		sumacventas2: Decimal;
		Media3: Decimal;
		sumaporlin3: Decimal;
		sumaporlin3t: Decimal;
		ProdHagen: Boolean;
		ProdNoHagen: Boolean;
		RecVendor: Record Vendor;
		tipocomi: Text[30];
		RecItem2: Record Item;
		ArchSalida: File;
		ArchSalida2: File;
		ArchSalida3: File;
		ArchSalida4: File;
		ArchSalida5: File;
		ArchExt: Text[80];
		ArchExt2: Text[80];
		ArchExt3: Text[80];
		ArchExt4: Text[80];
		ArchExt5: Text[80];
		TextoSalida1: Text[250];
		TextoSalida2: Text[250];
		TextoSalida3: Text[250];
		TextoSalida4: Text[250];
		TextoSalida5: Text[250];
		rut: Text[250];
		Rec1132: Record "Sales Invoice Line";
		SALE: Boolean;
		Rec1152: Record "Sales Cr.Memo Line";

	procedure BuscaComision(VENDE: Code[10];CODCLIENTE: Code[20];GCC: Code[10];CODPROD: Code[20];GCP: Code[10])
	begin
	end;

	procedure Buscalineasfac()
	begin
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		if RecRC.FindFirst then repeat
				  if (RecRC.Familia='') and (RecRC.Subfamilia='') then begin
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
						  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
						  TipoComision:='Esp.linea';
					 end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Invoice Line".Familia);
		if RecRC.FindFirst then repeat
				  if (RecRC.Subfamilia='') then begin
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
					   TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
					   TipoComision:='Esp.familia';
				  end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Invoice Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Invoice Line".Familia);
		RecRC.SetRange(RecRC.Subfamilia,"Sales Invoice Line".Subfamilia);
		if RecRC.FindFirst then repeat
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.subfamilia';
			 end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Producto,"Sales Invoice Line"."No.");
		if RecRC.FindFirst then repeat
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.producto';
			 end;
		until RecRC.Next=0;
		if CUSTOMER."Omitir Grupo en como voy" then begin
			 CUSTOMER."Grupo clientes":='';
		end;
		if CUSTOMER."Grupo clientes"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo cliente",CUSTOMER."Grupo clientes");
			 if RecRC.FindFirst then repeat
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
				  TipoComision:='Esp.Grupo';
				  EXENTOGRUPO:=true;
				  exentocolores:=true;
				  if RecRC."Tiene comision colores" then begin
					   exentocolores:=false;
				  end;
				  end;
			 until RecRC.Next=0;
		end;
		if CUSTOMER."Grupo dto. cabecera"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo dto. cabecera",CUSTOMER."Grupo dto. cabecera");
			 if RecRC.FindFirst then repeat
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
				  TipoComision:='Esp.Grupo';
				  end;
			 until RecRC.Next=0;
		end;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Cliente,CUSTOMER."No.");
		if RecRC.FindFirst then repeat
					 if (REC112."Posting Date">=RecRC."Desde Fecha") and
						(REC112."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.Cliente';
			 end;
		until RecRC.Next=0;
	end;

	procedure Buscalineasabo()
	begin
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Cr.Memo Line"."Gen. Prod. Posting Group");
		if RecRC.FindFirst then repeat
				  if (RecRC.Familia='') and (RecRC.Subfamilia='') then begin
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
						  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
						  TipoComision:='Esp.linea';
					 end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Cr.Memo Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Cr.Memo Line".Familia);
		if RecRC.FindFirst then repeat
				  if (RecRC.Subfamilia='') then begin
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
					   TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
					   TipoComision:='Esp.familia';
				  end;
				  end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Línea,"Sales Cr.Memo Line"."Gen. Prod. Posting Group");
		RecRC.SetRange(RecRC.Familia,"Sales Cr.Memo Line".Familia);
		RecRC.SetRange(RecRC.Subfamilia,"Sales Cr.Memo Line".Subfamilia);
		if RecRC.FindFirst then repeat
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
						  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.subfamilia';
			 end;
		until RecRC.Next=0;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Producto,"Sales Cr.Memo Line"."No.");
		if RecRC.FindFirst then repeat
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.producto';
			 end;
		until RecRC.Next=0;
		exentocolores:=false;
		if CUSTOMER."Grupo clientes"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo cliente",CUSTOMER."Grupo clientes");
			 if RecRC.FindFirst then repeat
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
				  TipoComision:='Esp.Grupo';
				  exentocolores:=true;
				  if RecRC."Tiene comision colores" then begin
					   exentocolores:=false;
				  end;
				  end;
			 until RecRC.Next=0;
		end;
		if CUSTOMER."Grupo dto. cabecera"<>'' then begin
			 RecRC.Reset;
			 RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
			 RecRC.SetRange(RecRC."Grupo dto. cabecera",CUSTOMER."Grupo dto. cabecera");
			 if RecRC.FindFirst then repeat
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
				  TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
				  TipoComision:='Esp.Grupo';
				  end;
			 until RecRC.Next=0;
		end;
		RecRC.Reset;
		RecRC.SetRange(RecRC.Vendedor,"Salesperson/Purchaser".Code);
		RecRC.SetRange(RecRC.Cliente,CUSTOMER."No.");
		if RecRC.FindFirst then repeat
					 if (REC114."Posting Date">=RecRC."Desde Fecha") and
						(REC114."Posting Date"<=RecRC."Hasta Fecha") then begin
			 TantoComision:=RecRC."Comisión %";
						  if ProdHagen then begin
							   TantoComision:=RecRC."Comisión % HAGEN";
						  end;
						  if ProdNoHagen then begin
							   TantoComision:=RecRC."Comisión % NO HAGEN";
						  end;
			 TipoComision:='Esp.Cliente';
			 end;
		until RecRC.Next=0;
	end;

	procedure Rellenefac()
	begin
	end;

	procedure BuscaColor()
	begin
	end;

	procedure BuscaColorFac()
	begin
		CUANTALIN2:=0;
		SUMA2:=false;
		SUMAPB2:=0;
		margenlin2:=0;
		SUMAPF2:=0;
		sumacostes2:=0;
		sumacventas2:=0;
		Rec113.Reset;
		Rec113.SetRange(Rec113."Document No.",nfac);
		Rec113.SetRange(Rec113.Type,2);
		if Rec113.FindFirst then repeat
			 SUMA2:=true;
			 if (Rec113."Line Discount %"=100) and (Rec113.Regalo=false) then begin
				  SUMA2:=false;
			 end;
			 if SUMA2 then begin
				  SUMAPB2:=SUMAPB2+Rec113.Quantity*Rec113."Precio base";
				  SUMAPF2:=SUMAPF2+Rec113.Amount;
			 end;
			 if Rec113.Defectuosos=false then begin
				  CUANTALIN2:=CUANTALIN2+1;
				  sumacostes2:=sumacostes2+Rec113."Unit Cost (LCY)"*Rec113.Quantity;
				  sumacventas2:=sumacventas2+Rec113."VAT Base Amount";
			 end;
		until Rec113.Next=0;
			 Media3:=0;
		if sumacventas2<>0 then begin
			 Media3:=100*((sumacventas2-sumacostes2)/sumacventas2);
		end;
			 color:='ROJO';
				  if (Media3>=TDESDE[2]) then begin
					   color:='MORADO';
				  end;
				  if (Media3>=TDESDE[3]) then begin
					   color:='AMARILLO';
				  end;
				  if (Media3>=TDESDE[4]) then begin
					   color:='AZUL';
				  end;
				  if (Media3>=TDESDE[5]) then begin
					   color:='VERDE';
				  end;
	end;

	procedure CabeceraExcel()
	begin
	end;

	local procedure OnPreSectionTable13_Header1(var "Salesperson/Purchaser" : Record "Salesperson/Purchaser");
	begin
		with Table13 do begin
		  CabeceraExcel;
		end;
	end;
	local procedure OnPreSectionTable13_GroupFooter2(var "Salesperson/Purchaser" : Record "Salesperson/Purchaser");
	begin
		with Table13 do begin
		  if not FooterPrinted then
			LastFieldNo := ReportForNav.TotalsCausedBy;
		  ReportForNav.ShowOutput := not FooterPrinted;
		  FooterPrinted := true;
		  if MetodoCal=0 then begin
			   TOTASUMA2:=sumaporlin3t;
		  end;
		  AÑO:=Date2dmy(Desde,3);
		  MES:=Date2dmy(Desde,2);
		  Rec33.Reset;
		  Rec33.SetRange(Rec33.Vendedor,"Salesperson/Purchaser".Code);
		  Rec33.SetRange(Rec33.Año,AÑO);
		  Rec33.SetRange(Rec33.Tipo,7);
		  if Rec33.FindFirst then begin
			   if MES=1 then entregadoaceunta:=Rec33.Enero;
			   if MES=2 then entregadoaceunta:=Rec33.Febrero;
			   if MES=3 then entregadoaceunta:=Rec33.Marzo;
			   if MES=4 then entregadoaceunta:=Rec33.Abril;
			   if MES=5 then entregadoaceunta:=Rec33.Mayo;
			   if MES=6 then entregadoaceunta:=Rec33.Junio;
			   if MES=7 then entregadoaceunta:=Rec33.Julio;
			   if MES=8 then entregadoaceunta:=Rec33.Agosto;
			   if MES=9 then entregadoaceunta:=Rec33.Septiembre;
			   if MES=10 then entregadoaceunta:=Rec33.Octubre;
			   if MES=11 then entregadoaceunta:=Rec33.Noviembre;
			   if MES=12 then entregadoaceunta:=Rec33.Diciembre;
		  end;
		  TotalImpaga:=0;
		  TotalImpaga:=0;
		  tantoimpa:=0;
		  tantorecu:=0;
		  recuperadosmes:=0;
		  impagadosmes:=0;
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,8);
		  if Rec3.FindFirst then begin
			   if MES=1 then impagadosmes:=Rec3.Enero;
			   if MES=2 then impagadosmes:=Rec3.Febrero;
			   if MES=3 then impagadosmes:=Rec3.Marzo;
			   if MES=4 then impagadosmes:=Rec3.Abril;
			   if MES=5 then impagadosmes:=Rec3.Mayo;
			   if MES=6 then impagadosmes:=Rec3.Junio;
			   if MES=7 then impagadosmes:=Rec3.Julio;
			   if MES=8 then impagadosmes:=Rec3.Agosto;
			   if MES=9 then impagadosmes:=Rec3.Septiembre;
			   if MES=10 then impagadosmes:=Rec3.Octubre;
			   if MES=11 then impagadosmes:=Rec3.Noviembre;
			   if MES=12 then impagadosmes:=Rec3.Diciembre;
		  end;
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,10);
		  if Rec3.FindFirst then begin
			   if MES=1 then tantoimpa:=Rec3.Enero;
			   if MES=2 then tantoimpa:=Rec3.Febrero;
			   if MES=3 then tantoimpa:=Rec3.Marzo;
			   if MES=4 then tantoimpa:=Rec3.Abril;
			   if MES=5 then tantoimpa:=Rec3.Mayo;
			   if MES=6 then tantoimpa:=Rec3.Junio;
			   if MES=7 then tantoimpa:=Rec3.Julio;
			   if MES=8 then tantoimpa:=Rec3.Agosto;
			   if MES=9 then tantoimpa:=Rec3.Septiembre;
			   if MES=10 then tantoimpa:=Rec3.Octubre;
			   if MES=11 then tantoimpa:=Rec3.Noviembre;
			   if MES=12 then tantoimpa:=Rec3.Diciembre;
		  end;
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,9);
		  if Rec3.FindFirst then begin
			   if MES=1 then recuperadosmes:=Rec3.Enero;
			   if MES=2 then recuperadosmes:=Rec3.Febrero;
			   if MES=3 then recuperadosmes:=Rec3.Marzo;
			   if MES=4 then recuperadosmes:=Rec3.Abril;
			   if MES=5 then recuperadosmes:=Rec3.Mayo;
			   if MES=6 then recuperadosmes:=Rec3.Junio;
			   if MES=7 then recuperadosmes:=Rec3.Julio;
			   if MES=8 then recuperadosmes:=Rec3.Agosto;
			   if MES=9 then recuperadosmes:=Rec3.Septiembre;
			   if MES=10 then recuperadosmes:=Rec3.Octubre;
			   if MES=11 then recuperadosmes:=Rec3.Noviembre;
			   if MES=12 then recuperadosmes:=Rec3.Diciembre;
		  end;
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,11);
		  if Rec3.FindFirst then begin
			   if MES=1 then tantorecu:=Rec3.Enero;
			   if MES=2 then tantorecu:=Rec3.Febrero;
			   if MES=3 then tantorecu:=Rec3.Marzo;
			   if MES=4 then tantorecu:=Rec3.Abril;
			   if MES=5 then tantorecu:=Rec3.Mayo;
			   if MES=6 then tantorecu:=Rec3.Junio;
			   if MES=7 then tantorecu:=Rec3.Julio;
			   if MES=8 then tantorecu:=Rec3.Agosto;
			   if MES=9 then tantorecu:=Rec3.Septiembre;
			   if MES=10 then tantorecu:=Rec3.Octubre;
			   if MES=11 then tantorecu:=Rec3.Noviembre;
			   if MES=12 then tantorecu:=Rec3.Diciembre;
		  end;
		  TotalImpaga:=ROUND(impagadosmes*tantoimpa/100,0.01)*-1;
		  Totalrecupera:=ROUND(recuperadosmes*tantorecu/100,0.01);
		  GLOBALVENTAS:=GLOBALVENTAS+TotalImpaga+Totalrecupera;
		  Rec3.Reset;
		  Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
		  Rec3.SetRange(Rec3.Año,AÑO);
		  Rec3.SetRange(Rec3.Tipo,0);
		  if Rec3.FindFirst then begin
			   if MES=1 then TOTALVENTAV:=Rec3.Enero;
			   if MES=2 then TOTALVENTAV:=Rec3.Febrero;
			   if MES=3 then TOTALVENTAV:=Rec3.Marzo;
			   if MES=4 then TOTALVENTAV:=Rec3.Abril;
			   if MES=5 then TOTALVENTAV:=Rec3.Mayo;
			   if MES=6 then TOTALVENTAV:=Rec3.Junio;
			   if MES=7 then TOTALVENTAV:=Rec3.Julio;
			   if MES=8 then TOTALVENTAV:=Rec3.Agosto;
			   if MES=9 then TOTALVENTAV:=Rec3.Septiembre;
			   if MES=10 then TOTALVENTAV:=Rec3.Octubre;
			   if MES=11 then TOTALVENTAV:=Rec3.Noviembre;
			   if MES=12 then TOTALVENTAV:=Rec3.Diciembre;
			   INCRETRAMO:=Rec3."Importe tramos";
			   TANTOTARMO:=Rec3."% Incremento por tramo";
		  end;
		  if ProdHagen then begin
				Rec3.Reset;
				Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
				Rec3.SetRange(Rec3.Año,AÑO);
				Rec3.SetRange(Rec3.Tipo,14);
				if Rec3.FindFirst then begin
					 if MES=1 then TOTALVENTAV:=Rec3.Enero;
					 if MES=2 then TOTALVENTAV:=Rec3.Febrero;
					 if MES=3 then TOTALVENTAV:=Rec3.Marzo;
					 if MES=4 then TOTALVENTAV:=Rec3.Abril;
					 if MES=5 then TOTALVENTAV:=Rec3.Mayo;
					 if MES=6 then TOTALVENTAV:=Rec3.Junio;
					 if MES=7 then TOTALVENTAV:=Rec3.Julio;
					 if MES=8 then TOTALVENTAV:=Rec3.Agosto;
					 if MES=9 then TOTALVENTAV:=Rec3.Septiembre;
					 if MES=10 then TOTALVENTAV:=Rec3.Octubre;
					 if MES=11 then TOTALVENTAV:=Rec3.Noviembre;
					 if MES=12 then TOTALVENTAV:=Rec3.Diciembre;
					 INCRETRAMO:=Rec3."Importe tramos";
					 TANTOTARMO:=Rec3."% Incremento por tramo";
				end;
		  end;
		  if ProdNoHagen then begin
				Rec3.Reset;
				Rec3.SetRange(Rec3.Vendedor,"Salesperson/Purchaser".Code);
				Rec3.SetRange(Rec3.Año,AÑO);
				Rec3.SetRange(Rec3.Tipo,15);
				if Rec3.FindFirst then begin
					 if MES=1 then TOTALVENTAV:=Rec3.Enero;
					 if MES=2 then TOTALVENTAV:=Rec3.Febrero;
					 if MES=3 then TOTALVENTAV:=Rec3.Marzo;
					 if MES=4 then TOTALVENTAV:=Rec3.Abril;
					 if MES=5 then TOTALVENTAV:=Rec3.Mayo;
					 if MES=6 then TOTALVENTAV:=Rec3.Junio;
					 if MES=7 then TOTALVENTAV:=Rec3.Julio;
					 if MES=8 then TOTALVENTAV:=Rec3.Agosto;
					 if MES=9 then TOTALVENTAV:=Rec3.Septiembre;
					 if MES=10 then TOTALVENTAV:=Rec3.Octubre;
					 if MES=11 then TOTALVENTAV:=Rec3.Noviembre;
					 if MES=12 then TOTALVENTAV:=Rec3.Diciembre;
					 INCRETRAMO:=Rec3."Importe tramos";
					 TANTOTARMO:=Rec3."% Incremento por tramo";
				end;
		  end;
		  Media:=0;
		  if TotalVenta<>0 then begin
			   Media:=ROUND(TotalComision*100/TotalVenta,0.001);
		  end;
		  MEDIA2:=0;
		  if TotalVenta<>0 then begin
			   MEDIA2:=ROUND(TOTASUMA2*100/TotalVenta,0.001);
			   color:='ROJO';
			   if (MEDIA2>="Salesperson/Purchaser"."Comision MORADO") then begin
					color:='MORADO';
			   end;
			   if (MEDIA2>="Salesperson/Purchaser"."Comision AMARILLO") then begin
					color:='AMARILLO';
			   end;
			   if (MEDIA2>="Salesperson/Purchaser"."Comision AZUL") then begin
					color:='AZUL';
			   end;
			   if (MEDIA2>="Salesperson/Purchaser"."Comision VERDE") then begin
					color:='VERDE';
			   end;
			   if ProdHagen then begin
					if (MEDIA2>="Salesperson/Purchaser"."Comision MORADO Hagen") then begin
						 color:='MORADO';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision AMARILLO Hagen") then begin
						 color:='AMARILLO';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision AZUL Hagen") then begin
						 color:='AZUL';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision VERDE Hagen") then begin
						 color:='VERDE';
					end;
			   end;
			   if ProdNoHagen then begin
					if (MEDIA2>="Salesperson/Purchaser"."Comision MORADO NO Hagen") then begin
						 color:='MORADO';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision AMARILLO NO Hagen") then begin
						 color:='AMARILLO';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision AZUL NO Hagen") then begin
						 color:='AZUL';
					end;
					if (MEDIA2>="Salesperson/Purchaser"."Comision VERDE NO Hagen") then begin
						 color:='VERDE';
					end;
			   end;
		  end;
		  /*
		  DIF:=TotalVenta-TOTALVENTAV;
		  IF DIF<0 THEN BEGIN
		  END;
		  IF INCRETRAMO<>0 THEN BEGIN
				   DIF:=ROUND(DIF/INCRETRAMO,1,'<');
		  END;
		  IF DIF>5 THEN BEGIN
			   DIF:=5;
		  END;
		  IF DIF=1 THEN BEGIN
			   tincre:=TotalComision*0.25;
			   TG:=TotalComision+tincre;
		  END;
		  IF DIF=2 THEN BEGIN
			   tincre:=TotalComision*0.5;
			   TG:=TotalComision+tincre;
		  END;
		  IF DIF>=3 THEN BEGIN
			   tincre:=TotalComision*0.75;
			   TG:=TotalComision+tincre;
		  END;
		  IF TOTALVENTAV>GLOBALVENTAS THEN BEGIN
			   DTM3:=TOTALVENTAV*0.75;
			   HTM3:=TOTALVENTAV-1;
			   DTM2:=TOTALVENTAV*0.50;
			   HTM2:=TOTALVENTAV*0.75-1;
			   HTM1:=TOTALVENTAV*0.50-1;
			   IF GLOBALVENTAS<HTM1 THEN BEGIN
					///TotalComision:=0;
					tincre:=0;
					TG:=0;
					DIF:=0;
			   END;
			   IF (GLOBALVENTAS>DTM2) AND (GLOBALVENTAS<HTM2) THEN BEGIN
					tincre:=(TotalComision/2)*-1;
					DIF:=-2;
					TG:=TotalComision+tincre;
			   END;
			   IF (GLOBALVENTAS>DTM3) AND (GLOBALVENTAS<HTM3) THEN BEGIN
					tincre:=TotalComision*0.25*-1;
					DIF:=-1;
					TG:=TotalComision+tincre;
			   END;
		  END;
		  IF TOTALVENTAV<=GLOBALVENTAS THEN BEGIN
		  suma1:=Media+TANTOTARMO*DIF;
		  TG:=ROUND(suma1*TotalVenta/100,0.01);
		  tincre:=TG-TotalComision;
		  IF DIF=-1 THEN BEGIN
			   tincre:=TotalComision*0.25*-1;
			   TG:=TotalComision+tincre;
		  END;
		  IF DIF=-2 THEN BEGIN
			   tincre:=TotalComision*0.5*-1;
			   TG:=TotalComision+tincre;
		  END;
		  IF DIF<=-3 THEN BEGIN
			   tincre:=TotalComision*0;
			   TG:=TotalComision+tincre;
		  END;
		  END;
			 */
		  aumneto:=0;
		  if TOTALVENTAV<>0 then begin
		  divisor:=((TotalVenta/TOTALVENTAV)*100)-100;
		  ///// MESSAGE('divisor %1',divisor);
		  if divisor>0 then begin
			   if divisor>10 then begin
					textoaumento:='BONUS';
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*10/100,0.01);
			   end;
			   if divisor>20 then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*20/100,0.01);
			   end;
			   if divisor>30 then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*30/100,0.01);
			   end;
			   if divisor>40 then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*40/100,0.01);
			   end;
			   TOTALC:=TotalComision+TOTASUMA2-entregadoaceunta+TotalImpaga+Totalrecupera+aumneto;
		  end;
		  if divisor<0 then begin
			   divisor:=divisor*-1;
			   if (divisor>10) then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*10/100,0.01)*-1;
					textoaumento:='MALUS';
			   end;
			   if (divisor>20) then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*20/100,0.01)*-1;
			   end;
			   if (divisor>30) then begin
					aumneto:=ROUND((TotalComision+TOTASUMA2+TotalImpaga+Totalrecupera)*30/100,0.01)*-1;
			   end;
			   TOTALC:=TotalComision+TOTASUMA2-entregadoaceunta+TotalImpaga+Totalrecupera+aumneto;
			   if divisor>40 then begin
				   TOTALC:=0;
			   end;
		  end;
		  end;
		end;

	end;
	local procedure OnPreSectionTable113_Body3(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput(not sindetalle);
			   comiporlin:=ROUND(tantocom2*"Sales Invoice Line"."VAT Base Amount"/100,0.01);
			   comiporlinCOP:=comiporlin;
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 comiporlin:=0;
			   end;
			   if exentocolores then begin
					 comiporlin:=0;
			   end;
			   sumaporlin:=sumaporlin+comiporlin;
		end;
	end;
	local procedure OnPreSectionTable113_GroupFooter4(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput((sindetalle) and (MetodoCal=1));
		  if ReportForNav.ShowOutput then begin
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		  mediacomifac1:=0;
		  if totalf1<>0 then begin
			   mediacomifac1:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
				color:='ROJO';
				margenlin:=0;
		  if sumaventas<>0 then begin
			   margenlin:=100*((sumaventas-sumacostes)/sumaventas);
		  end;
				tantocom2:="Salesperson/Purchaser"."Comision ROJO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
						 end;
			   if (margenlin>=TDESDE[2]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision MORADO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
						 end;
					color:='MORADO';
			   end;
			   if (margenlin>=TDESDE[3]) then begin
					color:='AMARILLO';
					tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
						 end;
			   end;
			   if (margenlin>=TDESDE[4]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision AZUL";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
						 end;
					color:='AZUL';
			   end;
			   if (margenlin>=TDESDE[5]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision VERDE";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
						 end;
					color:='VERDE';
			   end;
			   totalcomi2:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 totalcomi2:=0;
			   end;
			   /*IF contalin2=0 THEN BEGIN
					 color:='EXENTO';
					 totalcomi2:=0;
			   END;
			   */
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(sumaporlin*100/totalf1,0.001);
		  end;
			   TOTASUMA2:=TOTASUMA2+sumaporlin;
			   sumaporlin3:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 sumaporlin3:=0;
			   end;
			   if exentocolores then begin
					 sumaporlin3:=0;
			   end;
			   sumaporlin3t:=sumaporlin3t+sumaporlin3;
		  if UpperCase(UserId)='OSCAR' then begin
					 TextoSalida1:=Format(REC112."No.") + ';' +
								   Format(REC112."Posting Date") + ';' +
								   Format(REC112."Sell-to Customer No.") +';' +
								   Format(REC112."Sell-to Customer Name") + ';' +
								   Format(totalf1) + ';' +
								   Format(mediacomifac1) + ';';
					 TextoSalida2:=Format(totalcomifac) + ';'+
								   Format(color) + ';'+
								   Format(mediacomifac) + ';'+
								   Format(sumaporlin)+ ';'+
								   Format('1');
								   ArchSalida4.Write(TextoSalida1+TextoSalida2);
		  end;
		  end;
		end;

	end;
	local procedure OnPreSectionTable113_GroupFooter5(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput((sindetalle) and (MetodoCal=0));
		  if ReportForNav.ShowOutput then begin
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		  mediacomifac1:=0;
		  if totalf1<>0 then begin
			   mediacomifac1:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
				color:='ROJO';
				margenlin:=0;
		  if sumaventas<>0 then begin
			   margenlin:=100*((sumaventas-sumacostes)/sumaventas);
		  end;
				tantocom2:="Salesperson/Purchaser"."Comision ROJO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
						 end;
			   if (margenlin>=TDESDE[2]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision MORADO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
						 end;
					color:='MORADO';
			   end;
			   if (margenlin>=TDESDE[3]) then begin
					color:='AMARILLO';
					tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
						 end;
			   end;
			   if (margenlin>=TDESDE[4]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision AZUL";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
						 end;
					color:='AZUL';
			   end;
			   if (margenlin>=TDESDE[5]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision VERDE";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
						 end;
					color:='VERDE';
			   end;
			   totalcomi2:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 totalcomi2:=0;
			   end;
			   /*IF contalin2=0 THEN BEGIN
					 color:='EXENTO';
					 totalcomi2:=0;
			   END;
			   */
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(sumaporlin*100/totalf1,0.001);
		  end;
			   TOTASUMA2:=TOTASUMA2+sumaporlin;
			   sumaporlin3:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 sumaporlin3:=0;
			   end;
			   if exentocolores then begin
					 sumaporlin3:=0;
			   end;
			   sumaporlin3t:=sumaporlin3t+sumaporlin3;
			  if UpperCase(UserId)='OSCAR' then begin
					 TextoSalida1:=Format(REC112."No.") + ';' +
								   Format(REC112."Posting Date") + ';' +
								   Format(REC112."Sell-to Customer No.") +';' +
								   Format(REC112."Sell-to Customer Name") + ';' +
								   Format(totalf1) + ';' +
								   Format(mediacomifac1) + ';';
					 TextoSalida2:=Format(totalcomifac) + ';'+
								   Format(color) + ';'+
								   Format(tantocom2) + ';'+
								   Format(sumaporlin3)+ ';'+
								   Format('2');
								   ArchSalida4.Write(TextoSalida1+TextoSalida2);
								   end;
		  end;
		end;

	end;
	local procedure OnPreSectionTable113_Footer6(var "Sales Invoice Line" : Record "Sales Invoice Line");
	begin
		with Table113 do begin
		  ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	local procedure OnPreSectionTable115_Body7(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
			ReportForNav.ShowOutput(not sindetalle);
			   comiporlin:=ROUND(tantocom2*"Sales Cr.Memo Line"."VAT Base Amount"/100,0.01)*-1;
			   comiporlinCOP:=comiporlin;
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 comiporlin:=0;
			   end;
			   if exentocolores then begin
					 comiporlin:=0;
			   end;
			   sumaporlin:=sumaporlin+comiporlin;
		end;
	end;
	local procedure OnPreSectionTable115_GroupFooter8(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
		  ReportForNav.ShowOutput((sindetalle) and (MetodoCal=1));
		  if ReportForNav.ShowOutput then begin
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		  mediacomifac1:=0;
		  if totalf1<>0 then begin
			   mediacomifac1:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
				color:='ROJO';
				margenlin:=0;
		  if sumaventas<>0 then begin
			   margenlin:=100*((sumaventas-sumacostes)/sumaventas);
		  end;
				tantocom2:="Salesperson/Purchaser"."Comision ROJO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
						 end;
			   if (margenlin>=TDESDE[2]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision MORADO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
						 end;
					color:='MORADO';
			   end;
			   if (margenlin>=TDESDE[3]) then begin
					color:='AMARILLO';
					tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
						 end;
			   end;
			   if (margenlin>=TDESDE[4]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision AZUL";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
						 end;
					color:='AZUL';
			   end;
			   if (margenlin>=TDESDE[5]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision VERDE";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
						 end;
					color:='VERDE';
			   end;
			   totalcomi2:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 totalcomi2:=0;
			   end;
			   /*IF contalin2=0 THEN BEGIN
					 color:='EXENTO';
					 totalcomi2:=0;
			   END;
		  */
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(sumaporlin*100/totalf1,0.001);
		  end;
			   TOTASUMA2:=TOTASUMA2+sumaporlin;
		  if UpperCase(UserId)='OSCAR' then begin
					 TextoSalida1:=Format(REC114."No.") + ';' +
								   Format(REC114."Posting Date") + ';' +
								   Format(REC114."Sell-to Customer No.") +';' +
								   Format(REC114."Sell-to Customer Name") + ';' +
								   Format(totalf1) + ';' +
								   Format(mediacomifac1) + ';';
					 TextoSalida2:=Format(totalcomifac) + ';'+
								   Format(color) + ';'+
								   Format(mediacomifac) + ';'+
								   Format(sumaporlin)+ ';'+
								   Format('1');
								   ArchSalida4.Write(TextoSalida1+TextoSalida2);
		  end;
		  end;
		end;

	end;
	local procedure OnPreSectionTable115_GroupFooter9(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
		  ReportForNav.ShowOutput((sindetalle) and (MetodoCal=0));
		  if ReportForNav.ShowOutput then begin
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		  mediacomifac1:=0;
		  if totalf1<>0 then begin
			   mediacomifac1:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
				color:='ROJO';
				margenlin:=0;
		  if sumaventas<>0 then begin
			   margenlin:=100*((sumaventas-sumacostes)/sumaventas);
		  end;
				tantocom2:="Salesperson/Purchaser"."Comision ROJO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision ROJO NO Hagen";
						 end;
			   if (margenlin>=TDESDE[2]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision MORADO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision MORADO NO Hagen";
						 end;
					color:='MORADO';
			   end;
			   if (margenlin>=TDESDE[3]) then begin
					color:='AMARILLO';
					tantocom2:="Salesperson/Purchaser"."Comision AMARILLO";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AMARILLO NO Hagen";
						 end;
			   end;
			   if (margenlin>=TDESDE[4]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision AZUL";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision AZUL NO Hagen";
						 end;
					color:='AZUL';
			   end;
			   if (margenlin>=TDESDE[5]) then begin
					tantocom2:="Salesperson/Purchaser"."Comision VERDE";
						 if ProdHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE Hagen";
						 end;
						 if ProdNoHagen then begin
							  tantocom2:="Salesperson/Purchaser"."Comision VERDE NO Hagen";
						 end;
					color:='VERDE';
			   end;
			   totalcomi2:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 totalcomi2:=0;
			   end;
			   /*IF contalin2=0 THEN BEGIN
					 color:='EXENTO';
					 totalcomi2:=0;
			   END;
		  */
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(sumaporlin*100/totalf1,0.001);
		  end;
			   TOTASUMA2:=TOTASUMA2+sumaporlin;
			   sumaporlin3:=ROUND(tantocom2*totalf1/100,0.01);
			   if EXENTOGRUPO then begin
					 color:='EXENTO';
					 sumaporlin3:=0;
			   end;
			   if exentocolores then begin
					 sumaporlin3:=0;
			   end;
			   sumaporlin3t:=sumaporlin3t+sumaporlin3;
		  if UpperCase(UserId)='OSCAR' then begin
					 TextoSalida1:=Format(REC114."No.") + ';' +
								   Format(REC114."Posting Date") + ';' +
								   Format(REC114."Sell-to Customer No.") +';' +
								   Format(REC114."Sell-to Customer Name") + ';' +
								   Format(totalf1) + ';' +
								   Format(mediacomifac1) + ';';
					 TextoSalida2:=Format(totalcomifac) + ';'+
								   Format(color) + ';'+
								   Format(tantocom2) + ';'+
								   Format(sumaporlin3)+ ';'+
								   Format('2');
								   ArchSalida4.Write(TextoSalida1+TextoSalida2);
		  end;
		  end;
		end;

	end;
	local procedure OnPreSectionTable115_Footer10(var "Sales Cr.Memo Line" : Record "Sales Cr.Memo Line");
	begin
		with Table115 do begin
		   ReportForNav.ShowOutput(sindetalle);
		  mediacomifac:=0;
		  if totalf1<>0 then begin
			   mediacomifac:=ROUND(totalcomifac*100/totalf1,0.001);
		  end;
		end;
	end;
	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50073_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50073;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
