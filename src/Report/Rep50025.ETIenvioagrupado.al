#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50025_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50025){}   
		type("System.IO.Path"; System_IO_Path50025) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50025 "ETI. envio agrupado"
{
	UseRequestPage = false;
	ShowPrintStatus = true;
	RDLCLayout = './Layouts/ETI.envioagrupado.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Sales Header";"Sales Header")
		{
			DataItemTableView = sorting("Document Type","No.");
			RequestFilterFields = "No.";
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(obs2; obs2)
			{
			}
			column(dropship___RectraName; dropship+'   -   '+Rectra.Name)
			{
			}
			column(obs1; obs1)
			{
			}
			column(Text; Text)
			{
			}
			column(SalesHeaderNoexpedicion___SalesHeaderNoexpedicionagrupada; "Sales Header"."Nº expedición"+'  -  '+"Sales Header"."Nº expedición agrupada")
			{
			}
			column(SearchName_RecCust; RecCust."Search Name")
			{
			}
			trigger OnAfterGetRecord();
			begin
				obs2:='';
				if RecFP.Get("Sales Header"."Payment Method Code") then begin
					 if RecFP.Reembolso then begin
				///		  obs2:='Reembolso';
					 end;
				end;
				dropship:='';
				if "Sales Header".Dropshipping then begin
					 dropship:='DROPSHIPPING';
				end;
				RecCust.Get("Sales Header"."Sell-to Customer No.");
				NOMULTIPEDIDO:=false;
				obs1:='';
				obs2:='';
				X:=0;
				NLIN:=0;
				peso:=0;
				TOTALCANT:=0;
				Rec36.Reset;
				Rec36.SetRange(Rec36."Document Type","Sales Header"."Document Type");
				Rec36.SetRange(Rec36."No.","Sales Header"."No.");
				if Rec36.FindFirst then repeat
					 Rec37.Reset;
					 Rec37.SetRange(Rec37."Document Type",Rec36."Document Type");
					 Rec37.SetRange(Rec37."Document No.",Rec36."No.");
					 Rec37.SetRange(Rec37.Type,2);
					 if Rec37.FindFirst then repeat
						  if (Rec37."No."<>'TRAN') and (Rec37."No."<>'REM') then begin
							   if Rec37."Outstanding Quantity"<>0 then begin
									NLIN:=NLIN+1;
									if NLIN=1 then obs1:=obs1+Format(Rec37."No.")+'='+Format(Rec37."Outstanding Quantity")+' // ';
									if NLIN=2 then obs1:=obs1+Format(Rec37."No.")+'='+Format(Rec37."Outstanding Quantity")+' // ';
									if NLIN=3 then obs1:=obs1+Format(Rec37."No.")+'='+Format(Rec37."Outstanding Quantity");
									if NLIN=4 then obs2:=obs2+Format(Rec37."No.")+'='+Format(Rec37."Outstanding Quantity")+' // ';
									if NLIN=5 then obs2:=obs2+Format(Rec37."No.")+'='+Format(Rec37."Outstanding Quantity");
									TOTALCANT:=TOTALCANT+Rec37."Outstanding Quantity";
									peso:=peso+Rec37."Gross Weight"*Rec37.Quantity;
									X:=X+1;
									if RecItem2.Get(Rec37."No.") then begin
										 if Rec37."Enviar a ADAIA" then begin
											  RecItem2."No permite pedido":=false;
										 end;
										 if (RecItem2."Producto almacenable") and (not RecItem2."No permite pedido") then begin
											   if RecItem2."NO MULTIPEDIDO" then begin
												   NOMULTIPEDIDO:=true;
											  end;
										 end;
									end;
							   end;
						  end;
					 until Rec37.Next=0;
				until (Rec36.Next=0);
				Text:='Lin='+Format(X)+' - Peso='+Format(ROUND(peso,1))+' Arti='+Format(ROUND(TOTALCANT,1));
				Rectra.Init;
				if Rectra.Get("Sales Header"."Shipping Agent Code") then begin
				end;
					 obs:="Sales Header"."Observación PDA";
					 if ("Sales Header"."NO MULTIPEDIDO") or (NOMULTIPEDIDO) then begin
						  obs:='NO MULTIPEDIDO'+' '+"Sales Header"."Observación PDA";
					 end;
				if "Sales Header"."Multi-picking" then begin
					 "Sales Header"."Ship-to Name":='MULTIPICKING';
				end;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		Text: Text[50];
		Rec36: Record "Sales Header";
		Rec37: Record "Sales Line";
		X: Integer;
		CODEXPE: Code[20];
		descrip: Text[60];
		RecTP: Record "Item Translation";
		RecItem: Record Item;
		peso: Decimal;
		Rectra: Record "Shipping Agent";
		RecCust: Record Customer;
		obs: Text[255];
		obs1: Text[255];
		obs2: Text[255];
		NOMULTIPEDIDO: Boolean;
		RecItem2: Record Item;
		dropship: Code[20];
		RecFP: Record "Payment Method";
		NLIN: Integer;
		TOTALCANT: Decimal;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50025_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50025;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
