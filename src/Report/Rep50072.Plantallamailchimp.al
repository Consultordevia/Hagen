#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50072_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50072){}   
		type("System.IO.Path"; System_IO_Path50072) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50072 "Plantalla mail chimp"
{
	RDLCLayout = './Layouts/Plantallamailchimp.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Purch. Rcpt. Line";"Purch. Rcpt. Line")
		{
			DataItemTableView = sorting("Document No.","Line No.");
			RequestFilterFields = "Document No.";
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(USERID; UserId)
			{
			}
			column(ReportForNavPageNo; Format(ReportForNav.PageNo))
			{
			}
			column(COMPANYNAME; COMPANYNAME)
			{
			}
			column(TODAY_0_4; Format(Today,0,4))
			{
			}
			column(Quantity; "Purch. Rcpt. Line".Quantity)
			{
			}
			column(Description; "Purch. Rcpt. Line".Description)
			{
			}
			column(No; "Purch. Rcpt. Line"."No.")
			{
			}
			dataitem("Sales Line";"Sales Line")
			{
				DataItemLink = "No."=field("No.");
				DataItemTableView = sorting("Document Type","No.","Sell-to Customer No.") where("Document Type"=const(Quote));
				column(ReportForNavId_9; 9) {} // Autogenerated by ForNav - Do not delete
				column(NOMBREVENDE; NOMBREVENDE)
				{
				}
				column(DocumentNo; "Sales Line"."Document No.")
				{
				}
				column(Codclie; "Sales Line"."Sell-to Customer No.")
				{
				}
				column(Nombrecliente; nombrecliente)
				{
				}
				column(Grupoclientes; "Sales Line"."Grupo clientes")
				{
				}
				column(CantidadPdte; "Sales Line"."Outstanding Quantity")
				{
				}
				column(FechaAlta; "Sales Line"."Fecha alta")
				{
				}
				trigger OnAfterGetRecord();
				begin
					NOMBREVENDE:='';
					if RecCV.Get("Sales Line"."Document Type","Sales Line"."Document No.") then begin
						 if RecVen.Get(RecCV."Salesperson Code") then begin
							  NOMBREVENDE:=RecVen.Name;
						 end;
					end;
					GRUPOCLI:='';
					nombrecliente:='';
					if RecCusto.Get("Sales Line"."Sell-to Customer No.") then begin
						nombrecliente:=RecCusto.Name;
						GRUPOCLI:=RecCusto."Grupo clientes";
					end;
					/*
						 fnCrearCelda('A' + FORMAT(intFila),FORMAT("Sales Line"."No."));
						 fnCrearCelda('B' + FORMAT(intFila),FORMAT("Sales Line".Description));
						 fnCrearCelda('C' + FORMAT(intFila),FORMAT(NOMBREVENDE));
						 fnCrearCelda('D' + FORMAT(intFila),FORMAT("Sales Line"."Sell-to Customer No."));
						 fnCrearCelda('E' + FORMAT(intFila),FORMAT(nombrecliente));
						 fnCrearCelda('F' + FORMAT(intFila),FORMAT(GRUPOCLI));
						 fnCrearCelda('G' + FORMAT(intFila),FORMAT("Sales Line"."Outstanding Quantity"));
						 fnCrearCelda('H' + FORMAT(intFila),FORMAT("Sales Line"."Document No."));
					intFila:=intFila+1;
					*/
				
				end;
				
			}
			dataitem(Customer;Customer)
			{
				column(ReportForNavId_1000000001; 1000000001) {} // Autogenerated by ForNav - Do not delete
				column(CustomerUsuarioWeb; Customer."Usuario Web")
				{
				}
				column(CustomerNombreparaemail; Customer."Nombre para email")
				{
				}
				column(CustomerNo; Customer."No.")
				{
				}
				column(CustomerSearchName; Customer."Search Name")
				{
				}
				column(GRUPODTOWWB; GRUPODTOWWB)
				{
				}
				column(CustomerCountryRegionCode; Customer."Country/Region Code")
				{
				}
				column(CustomerCounty; Customer.County)
				{
				}
				column(NOS1; NOS1)
				{
				}
				column(NOS2; NOS2)
				{
				}
				column(NOS3; NOS3)
				{
				}
				column(NOS4; NOS4)
				{
				}
				column(NOS5; NOS5)
				{
				}
				column(NOS6; NOS6)
				{
				}
				column(NOS7; NOS7)
				{
				}
				column(NOS8; NOS8)
				{
				}
				column(NOS9; NOS9)
				{
				}
				column(NOS10; NOS10)
				{
				}
				column(NOMCOMER; NOMCOMER)
				{
				}
				column(CustomerClasificacionABCagen; Customer."Clasificación A,B,C Hagen")
				{
				}
				column(CustomerEstatusdelcliente; Customer."Estatus del cliente")
				{
				}
				column(RecMTDescripcion; RecMT.Descripción)
				{
				}
				column(totalventa; totalventa)
				{
				}
				column(descomuni; descomuni)
				{
				}
				column(CLASIWEB; CLASIWEB)
				{
				}
				column(DATOSFA1; DATOSFA[1])
				{
				}
				column(DATOSFA2; DATOSFA[2])
				{
				}
				column(DATOSFA3; DATOSFA[3])
				{
				}
				column(DATOSFA4; DATOSFA[4])
				{
				}
				column(DATOSFA5; DATOSFA[5])
				{
				}
				column(DATOSFA6; DATOSFA[6])
				{
				}
				column(DATOSFA7; DATOSFA[7])
				{
				}
				column(GV; GV)
				{
				}
				trigger OnAfterGetRecord();
				begin
				
				
				
					GRUPODTOWWB:='';
					RecMT3.Reset;
					RecMT3.SetRange(RecMT3.Tabla,0);
					RecMT3.SetRange(RecMT3."Código 1",Customer."No.");
					RecMT3.SetRange(RecMT3."Por defecto",true);
					if RecMT3.FindFirst then begin
						 GRUPODTOWWB:=RecMT3."Código 2";
						 CLASIWEB:='';
						 RecMT.Reset;
						 RecMT.SetRange(RecMT.Tabla,27);
						 RecMT.SetRange(RecMT.Código,RecMT3."Código 2");
						 if RecMT.FindFirst then begin
							  CLASIWEB:=RecMT.Descripción;
						 end;
				
				
					end;
				
				
					descomuni:='';
					RecMT.Reset;
					RecMT.SetRange(RecMT.Tabla,15);
					RecMT.SetRange(RecMT.Código,Customer.Comunidad);
					if RecMT.FindFirst then begin
						 descomuni:=RecMT.Descripción;
					end;
				
				
				
				
				
					  DESDEF:=CalcDate('-1A',Today);
					  HASTAF:=Today;
					  Clear(DATOSFA);
					  I:=0;
					  totalventa:=0;
				
					  RecDat.SetRange(RecDat."Filtro fecha",DESDEF,HASTAF);
					  RecDat.SetRange(RecDat."Filtro Cliente",Customer."No.");
					  RecDat.SetRange(RecDat.Estadistica,true);
					  if RecDat.FindFirst then repeat
						   I:=I+1;
						   RecDat.CalcFields(RecDat.Importe);
						   DATOSFA[I]:=RecDat.Importe;
						   totalventa:=totalventa+RecDat.Importe;
						   RecMt2.Reset;
						   RecMt2.SetCurrentkey(RecMt2."Orden de LineasNegoWEB");
						   RecMt2.SetRange(RecMt2."Código 1",Customer."No.");
						   RecMt2.SetRange(RecMt2."Código 2",RecDat.Code);
						   RecMt2.SetRange(RecMt2.Tabla,9);
						   if RecMt2.FindFirst then begin
								DATOSFA[I]:=1;
						   end;
				
					  until RecDat.Next=0;
				
					  NOS1:='N';
					  NOS2:='N';
					  NOS3:='N';
					  NOS4:='N';
					  NOS5:='N';
					  NOS6:='N';
					  NOS7:='N';
				
				
					  if Customer."Estatus del cliente"=4 then begin
					  NOS1:='S';
					  NOS2:='S';
					  NOS3:='S';
					  NOS4:='S';
					  NOS5:='S';
					  NOS6:='S';
					  NOS7:='S';
					  end;
					  if totalventa=0 then begin
					  NOS1:='S';
					  NOS2:='S';
					  NOS3:='S';
					  NOS4:='S';
					  NOS5:='S';
					  NOS6:='S';
					  NOS7:='S';
					  end;
				
					  NOS8:='N';
					  if Customer."Enviar a Web" then begin
						  NOS8:='S';
					  end;
					  NOS9:='N';
					  ///IF Customer."Facturas WEB" THEN BEGIN
						  ///NOS9:='S';
					  ///END;
					  NOS10:='N';
					  DESDEF:=CalcDate('-2M',Today);
					  HASTAF:=Today;
				
				
					  RecCli.Get(Customer."No.");
					  RecCli.SetRange(RecCli."Date Filter",DESDEF,HASTAF);
					  RecCli.CalcFields(RecCli."Sales (LCY)");
				
					  if RecCli."Sales (LCY)"<>0 then begin
						   NOS10:='S';
					  end;
					  NOMCOMER:='';
					  if RecVende.Get(Customer."Salesperson Code") then begin
						   NOMCOMER:=RecVende.Name;
					  end;
					  RecMT.Init;
					  ///IF RecMT.GET(6,Customer."Tipo cliente") THEN BEGIN
					  ///END;
				
				
					GV:='';
					RecMT.Reset;
					RecMT.SetRange(RecMT.Tabla,31);
					RecMT.SetRange(RecMT.Código,Customer."Grupo ventas");
					if RecMT.FindFirst then begin
						 GV:=RecMT.Descripción;
					end;
				
				
				
				end;
				
			}
			trigger OnPreDataItem();
			begin
				LastFieldNo := FieldNo("Document No.");
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		
		;ReportsForNavPre;
		
		/*  fnCrearHoja('ENTRADA ROTURAS',90);
		  fnCrearCelda('A' + FORMAT(intFila),'Producto');
		  fnCrearCelda('B' + FORMAT(intFila),'Descripcion');
		  fnCrearCelda('C' + FORMAT(intFila),'Vendedor');
		  fnCrearCelda('D' + FORMAT(intFila),'Cliente');
		  fnCrearCelda('E' + FORMAT(intFila),'Nombre cliente');
		  fnCrearCelda('F' + FORMAT(intFila),'Grupo cliente');
		  fnCrearCelda('G' + FORMAT(intFila),'Cantidad pdte.');
		  fnCrearCelda('H' + FORMAT(intFila),'Oferta');
		  intFila := intFila + 1;
		*/

	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		nombrecli: Text[50];
		RecCusto: Record Customer;
		intFila: Integer;
		NOMBREVENDE: Text[30];
		RecVen: Record "Salesperson/Purchaser";
		nombrecliente: Text[50];
		RecCV: Record "Sales Header";
		GRUPOCLI: Code[20];
		CONTENEDOR: Decimal;
		PEDIDO: Decimal;
		FECHAC: Date;
		FECHAP: Date;
		RecLC: Record "Purchase Line";
		DIVIDE: Integer;
		NOMCOMER: Text[30];
		RecVende: Record "Salesperson/Purchaser";
		RecDat: Record "Gen. Product Posting Group";
		DATOSFA: array [12] of Decimal;
		DESDEF: Date;
		HASTAF: Date;
		GRUPODTOWWB: Code[20];
		RecMT3: Record UnknownRecord50028;
		RecCli: Record Customer;
		VENTANA: Dialog;
		RecMt2: Record UnknownRecord50020;
		RecMT: Record UnknownRecord50005;
		totalventa: Decimal;
		descomuni: Text[30];
		CLASIWEB: Text[30];
		GV: Text[30];
		NOS1: Code[10];
		NOS2: Code[10];
		NOS3: Code[10];
		NOS4: Code[10];
		NOS5: Code[10];
		NOS6: Code[10];
		NOS7: Code[10];
		NOS8: Code[10];
		NOS9: Code[10];
		NOS10: Code[10];
		I: Integer;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50072_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50072;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
