Report 50206 "Credito y caucion"
{
    RDLCLayout = './Layouts/Creditoycaucion.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Cust. Ledger Entry"; "Cust. Ledger Entry")
        {
            CalcFields = Amount, "Remaining Amount", "Original Amt. (LCY)", "Remaining Amt. (LCY)", "Amount (LCY)";
            DataItemTableView = sorting("Document Type", "Customer No.", "Posting Date", "Currency Code");
            RequestFilterFields = "Posting Date";
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(FiltrosMov; FiltrosMov)
            {
            }
            column(TODAY; Today)
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Total1_Total2; Total1 + Total2)
            {
            }
            column(Contado; Contado)
            {
            }
            column(Total2; Total2)
            {
            }
            column(Total1; Total1)
            {
            }
            column(Mas360d; Mas360d)
            {
            }
            column(A360d; A360d)
            {
            }
            column(A330d; A330d)
            {
            }
            column(A300d; A300d)
            {
            }
            column(A270d; A270d)
            {
            }
            column(A240d; A240d)
            {
            }
            column(A210d; A210d)
            {
            }
            column(A150d; A150d)
            {
            }
            column(A120d; A120d)
            {
            }
            column(A180d; A180d)
            {
            }
            column(A90d; A90d)
            {
            }
            column(A60d; A60d)
            {
            }
            column(A30d; A30d)
            {
            }
            trigger OnPreDataItem();
            begin
                SetFilter("Document Type", '%1|%2', "document type"::Invoice, "document type"::"Credit Memo");
            end;

            trigger OnAfterGetRecord();
            begin
                /*
				if not Cli.Get("Cust. Ledger Entry"."Customer No.") then CurrReport.Skip;
				if Cli."NÂº Poliza"<>'' then begin
				  if ("Cust. Ledger Entry"."Posting Date"="Cust. Ledger Entry"."Due Date") or
					 ("Document Type"="document type"::"Credit Memo") then
				  Contado:=Contado+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('30D',"Cust. Ledger Entry"."Posting Date") then
					A30d:= A30d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('60D',"Cust. Ledger Entry"."Posting Date") then
					A60d:= A60d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('90D',"Cust. Ledger Entry"."Posting Date") then
					A90d:= A90d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('120D',"Cust. Ledger Entry"."Posting Date") then
					A120d:= A120d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('150D',"Cust. Ledger Entry"."Posting Date") then
					A150d:= A150d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('180D',"Cust. Ledger Entry"."Posting Date") then
					A180d:= A180d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('210D',"Cust. Ledger Entry"."Posting Date") then
					A210d:= A210d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('240D',"Cust. Ledger Entry"."Posting Date") then
					A240d:= A240d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('270D',"Cust. Ledger Entry"."Posting Date") then
					A270d:= A270d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('300D',"Cust. Ledger Entry"."Posting Date") then
					A300d:= A300d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('330D',"Cust. Ledger Entry"."Posting Date") then
					A330d:= A330d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
				  if "Cust. Ledger Entry"."Due Date"<=CalcDate('360D',"Cust. Ledger Entry"."Posting Date") then
					A360d:= A360d+"Cust. Ledger Entry"."Amount (LCY)"
				  else
					  Mas360d:= Mas360d+"Cust. Ledger Entry"."Amount (LCY)"
				   end else
				   Export:=Export+"Cust. Ledger Entry"."Amount (LCY)";
				   */
            end;


        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
    end;

    trigger OnPostReport()
    begin
    end;

    trigger OnPreReport()
    begin
        FiltrosMov := "Cust. Ledger Entry".GetFilters;
    end;

    var
        Cli: Record Customer;
        Contado: Decimal;
        A30d: Decimal;
        A60d: Decimal;
        A90d: Decimal;
        A120d: Decimal;
        A150d: Decimal;
        A180d: Decimal;
        A210d: Decimal;
        A240d: Decimal;
        A270d: Decimal;
        A300d: Decimal;
        A330d: Decimal;
        A360d: Decimal;
        Mas360d: Decimal;
        Export: Decimal;
        Total1: Decimal;
        Total2: Decimal;
        Total: Decimal;
        FiltrosMov: Text[100];

    local procedure OnPreSectionTable21_Footer1(var "Cust. Ledger Entry": Record "Cust. Ledger Entry");
    begin
        with "Cust. Ledger Entry" do begin
            Total1 := A30d + A60d + A90d + A120d + A150d + A180d + A210d + A240d + A270d + A300d + A330d + A360d + Mas360d;
            Total2 := Contado + Export;
        end;
    end;
    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var


        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

}
