
Report 50050 "ETI. envio agrupado d"
{
    UseRequestPage = false;
    RDLCLayout = './Layouts/ETI.envioagrupadod.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Sales Header"; "Sales Header")
        {
            DataItemTableView = sorting("Document Type", "No.");
            RequestFilterFields = "No.";
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(obs2; obs2)
            {
            }
            column(dropship___RectraName; dropship + '   -   ' + Rectra.Name)
            {
            }
            column(obs1; obs1)
            {
            }
            column(Text; Text)
            {
            }
            column(SalesHeaderNoexpedicion___SalesHeaderNoexpedicionagrupada; "Sales Header"."Nº expedición" + '  -  ' + "Sales Header"."Nº expedición dropshp" + '  B:' + Format(bultos))
            {
            }
            column(SearchName_RecCust; RecCust."Search Name")
            {
            }
            column(textocaja; textocaja)
            {
            }
            column(textocaja1; textocaja1)
            {
            }
            column(textocaja2; textocaja2)
            {
            }
            column(textocaja3; textocaja3)
            {
            }
            column(npedido; "Sales Header"."No.")
            {
            }
            trigger OnAfterGetRecord();
            begin



                bultos := 1 + "Sales Header"."Incrementa bultos";

                numcajas := 0;
                TipocajaG.Reset;
                if TipocajaG.FindFirst then
                    repeat
                        TipocajaG.cabtidad := 0;
                        TipocajaG.Modify;
                    until TipocajaG.Next = 0;

                SalesHeader.Reset;
                SalesHeader.SetRange("Document Type", "Sales Header"."Document Type");
                SalesHeader.SetRange("No.", "Sales Header"."No.");
                if SalesHeader.FindFirst then
                    repeat
                        Multitabla2.Reset;
                        Multitabla2.SetRange("Código 1", SalesHeader."No.");
                        if not Multitabla2.FindFirst then begin
                            pesopedido := 0;
                            cajas0 := 0;
                            cajas6 := 0;
                            cajas7 := 0;
                            cajas8 := 0;
                            cajas9 := 0;
                            cajas10 := 0;
                            SalesLineTC.Reset;
                            SalesLineTC.SetRange(SalesLineTC."Document No.", SalesHeader."No.");
                            if SalesLineTC.FindFirst then
                                repeat
                                    if Item.Get(SalesLineTC."No.") then begin
                                        Item.CalcFields("Assembly BOM");
                                        if (Item."Producto almacenable") and (not Item."Assembly BOM") then begin

                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"0-Sin Caja" then begin
                                                cajas0 := cajas0 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"6-Tubo" then begin
                                                cajas6 := cajas6 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"7-Alargado" then begin
                                                cajas7 := cajas7 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"8-Cuadrado" then begin
                                                cajas8 := cajas8 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"9-Gateras" then begin
                                                cajas9 := cajas9 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if Item."Tipo preparacion" = Item."tipo preparacion"::"10-Arena" then begin
                                                cajas10 := cajas10 + SalesLineTC."Quantity (Base)";
                                            end;
                                            if (Item."Tipo preparacion" = Item."tipo preparacion"::"1-Muy pequeño") or
                                              (Item."Tipo preparacion" = Item."tipo preparacion"::"2-Pequeño") or
                                              (Item."Tipo preparacion" = Item."tipo preparacion"::"3-Mediano") or
                                              (Item."Tipo preparacion" = Item."tipo preparacion"::"4-Grande") or
                                              (Item."Tipo preparacion" = Item."tipo preparacion"::"5- Extra Grande") then begin
                                                pesopedido := pesopedido + (SalesLineTC."Quantity (Base)" * SalesLineTC."Net Weight");
                                            end;
                                        end;
                                    end;
                                until SalesLineTC.Next = 0;
                            textocaja := '';
                            if cajas0 <> 0 then begin
                                numcajas := numcajas + cajas0;
                                textocaja := textocaja + ' CJ00: ' + Format(cajas0);
                                TipocajaG.Get('CJ00');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + cajas0;
                                TipocajaG.Modify;
                            end;
                            if cajas6 <> 0 then begin
                                numcajas := numcajas + cajas6;
                                NCAJAS := cajas6 / 6;
                                NCAJAS := ROUND(NCAJAS, 1);
                                if NCAJAS = 0 then NCAJAS := 1;
                                textocaja := textocaja + ' CJT: ' + Format(NCAJAS);
                                TipocajaG.Get('CJT');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                TipocajaG.Modify;
                            end;
                            if cajas7 <> 0 then begin
                                textocaja := textocaja + ' CJ09: ' + Format(cajas0);
                                TipocajaG.Get('C09');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                TipocajaG.Modify;
                            end;
                            if cajas8 <> 0 then begin
                                textocaja := textocaja + ' CJ23: ' + Format(cajas0);
                                TipocajaG.Get('CJ23');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                TipocajaG.Modify;
                            end;
                            if cajas9 <> 0 then begin
                                textocaja := textocaja + ' CJ22: ' + Format(cajas0);
                                TipocajaG.Get('CJ22');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                TipocajaG.Modify;
                            end;
                            if cajas10 <> 0 then begin
                                textocaja := textocaja + ' CJ12: ' + Format(cajas0);
                                TipocajaG.Get('CJ12');
                                TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                TipocajaG.Modify;
                            end;
                            if pesopedido <> 0 then begin
                                Tipocaja.Reset;
                                Tipocaja.SetCurrentkey("Maximo kilos");
                                Tipocaja.SetRange(Combinable, true);
                                Tipocaja.SetRange("Maximo kilos", pesopedido, 999999);
                                if Tipocaja.FindFirst then begin
                                    NCAJAS := ROUND(pesopedido / Tipocaja."Maximo kilos", 1);
                                    if NCAJAS = 0 then NCAJAS := 1;
                                    numcajas := numcajas + NCAJAS;
                                    textocaja := textocaja + ' ' + Tipocaja."Tipo caja" + ': ' + Format(NCAJAS);
                                    TipocajaG.Get(Tipocaja."Tipo caja");
                                    TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                    TipocajaG.Modify;
                                end;
                                if not Tipocaja.FindFirst then begin
                                    Tipocaja.Reset;
                                    Tipocaja.SetRange(Combinable, true);
                                    if Tipocaja.FindLast then begin
                                        NCAJAS := ROUND(pesopedido / 10, 1);
                                        if NCAJAS = 0 then NCAJAS := 1;
                                        numcajas := numcajas + NCAJAS;
                                        textocaja := textocaja + ' ' + Tipocaja."Tipo caja" + ': ' + Format(NCAJAS);
                                        TipocajaG.Get(Tipocaja."Tipo caja");
                                        TipocajaG.cabtidad := TipocajaG.cabtidad + NCAJAS;
                                        TipocajaG.Modify;
                                    end;
                                end;
                            end;
                        end;
                        Multitabla2.Reset;
                        Multitabla2.SetRange("Código 1", SalesHeader."No.");
                        if Multitabla2.FindFirst then
                            repeat
                                if Multitabla2."Cantidad caja" <> 0 then begin
                                    TipocajaG.Get(Multitabla2."Código 2");
                                    TipocajaG.cabtidad := TipocajaG.cabtidad + Multitabla2."Cantidad caja";
                                    TipocajaG.Modify;
                                end;
                            until Multitabla2.Next = 0;

                    until SalesHeader.Next = 0;
                textocaja := '';
                TipocajaG.Reset;
                if TipocajaG.FindFirst then
                    repeat
                        if TipocajaG.cabtidad <> 0 then begin
                            textocaja := textocaja + ' ' + TipocajaG."Tipo caja" + ': ' + Format(TipocajaG.cabtidad);
                        end;
                    until TipocajaG.Next = 0;



                RecCV2.Get("Sales Header"."Document Type", "Sales Header"."No.");
                RecCV2.Validate(RecCV2."Nº bultos", numcajas);
                RecCV2.Modify;



                obs2 := '';
                if RecFP.Get("Sales Header"."Payment Method Code") then begin
                    if RecFP.Reembolso then begin
                        ///		  obs2:='Reembolso';
                    end;
                end;
                dropship := '';
                if "Sales Header".Dropshipping then begin
                    dropship := 'DROPSHIPPING';
                end;
                RecCust.Get("Sales Header"."Sell-to Customer No.");
                NOMULTIPEDIDO := false;
                obs1 := '';
                obs2 := '';
                obs3 := '';
                X := 0;
                NLIN := 0;
                peso := 0;
                TOTALCANT := 0;
                Rec36.Reset;
                Rec36.SetRange(Rec36."Document Type", "Sales Header"."Document Type");
                Rec36.SetRange(Rec36."No.", "Sales Header"."No.");
                if Rec36.FindFirst then
                    repeat
                        Rec37.Reset;
                        Rec37.SetRange(Rec37."Document Type", Rec36."Document Type");
                        Rec37.SetRange(Rec37."Document No.", Rec36."No.");
                        Rec37.SetRange(Rec37.Type, 2);
                        if Rec37.FindFirst then
                            repeat
                                if (Rec37."No." <> 'TRAN') and (Rec37."No." <> 'REM') then begin
                                    if Rec37."Outstanding Quantity" <> 0 then begin
                                        if RecItem2.Get(Rec37."No.") then begin
                                        end;
                                        RecItem2.CalcFields("Assembly BOM");
                                        if (RecItem2."Producto almacenable") and (not RecItem2."Assembly BOM") then begin
                                            NLIN := NLIN + 1;
                                            if NLIN = 1 then obs1 := obs1 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 2 then obs1 := obs1 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 3 then obs1 := obs1 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 4 then obs1 := obs1 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)");
                                            if NLIN = 5 then obs2 := obs2 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 6 then obs2 := obs2 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 7 then obs2 := obs2 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 8 then obs2 := obs2 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)");
                                            if NLIN = 9 then obs3 := obs3 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 10 then obs3 := obs3 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 11 then obs3 := obs3 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)") + ' / ';
                                            if NLIN = 12 then obs3 := obs3 + Format(Rec37."No.") + '=' + Format(Rec37."Outstanding Qty. (Base)");
                                            TOTALCANT := TOTALCANT + Rec37."Outstanding Qty. (Base)";
                                            peso := peso + Rec37."Gross Weight" * Rec37."Quantity (Base)";
                                            X := X + 1;
                                            if RecItem2.Get(Rec37."No.") then begin
                                                if Rec37."Enviar a ADAIA" then begin
                                                    RecItem2."No permite pedido" := false;
                                                end;
                                                if (RecItem2."Producto almacenable") and (not RecItem2."No permite pedido") then begin
                                                    if RecItem2."NO MULTIPEDIDO" then begin
                                                        NOMULTIPEDIDO := true;
                                                    end;
                                                end;
                                            end;
                                        end;
                                    end;
                                end;
                            until Rec37.Next = 0;
                    until (Rec36.Next = 0);
                Text := 'Lin=' + Format(X) + ' - Peso=' + Format(ROUND(peso, 1)) + ' Arti=' + Format(ROUND(TOTALCANT, 1));
                Rectra.Init;
                if Rectra.Get("Sales Header"."Shipping Agent Code") then begin
                end;
                obs := "Sales Header"."Observación PDA";
                if ("Sales Header"."NO MULTIPEDIDO") or (NOMULTIPEDIDO) then begin
                    obs := 'NO MULTIPEDIDO' + ' ' + "Sales Header"."Observación PDA";
                end;
                if "Sales Header"."Multi-picking" then begin
                    "Sales Header"."Ship-to Name" := 'MULTIPICKING';
                end;

                textocaja1 := textocaja + ' ' + obs1;
                textocaja2 := obs2;
                textocaja3 := obs3;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin

    end;

    trigger OnPostReport()
    begin

    end;

    trigger OnPreReport()
    begin

    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        Text: Text[50];
        Rec36: Record "Sales Header";
        Rec37: Record "Sales Line";
        X: Integer;
        CODEXPE: Code[20];
        descrip: Text[60];
        RecTP: Record "Item Translation";
        RecItem: Record Item;
        peso: Decimal;
        Rectra: Record "Shipping Agent";
        RecCust: Record Customer;
        obs: Text[255];
        obs1: Text[255];
        obs2: Text[255];
        obs3: Text[255];
        NOMULTIPEDIDO: Boolean;
        RecItem2: Record Item;
        dropship: Code[20];
        RecFP: Record "Payment Method";
        NLIN: Integer;
        TOTALCANT: Decimal;
        pesopedido: Decimal;
        cajas0: Decimal;
        cajas6: Decimal;
        SalesLineTC: Record "Sales Line";
        Item: Record Item;
        textocaja: Text;
        Tipocaja: Record "Tipo caja";
        SalesHeader: Record "Sales Header";
        NCAJAS: Decimal;
        textocaja1: Text;
        textocaja2: Text;
        textocaja3: Text;
        TipocajaG: Record "Tipo caja";
        numcajas: Integer;
        RecCV2: Record "Sales Header";
        cajas7: Integer;
        cajas8: Integer;
        cajas9: Integer;
        cajas10: Integer;
        Multitabla2: Record "Multitabla 2";
        bultos: Decimal;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

}
