#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50033_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50033){}   
		type("System.IO.Path"; System_IO_Path50033) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50033 "Etiqueta Envio"
{
	Caption = 'Etiqueta Envio';
	RDLCLayout = './Layouts/EtiquetaEnvio.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Sales Shipment Header";"Sales Shipment Header")
		{
			DataItemTableView = sorting("No.");
			RequestFilterFields = "No.","Sell-to Customer No.";
			RequestFilterHeading = 'Sales Order';
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			dataitem(Integer;Integer)
			{
				DataItemTableView = sorting(Number);
				column(ReportForNavId_2; 2) {} // Autogenerated by ForNav - Do not delete
				column(SalesShipmentHeaderSell_toCustomerNo__CustAddr1; "Sales Shipment Header"."Sell-to Customer No."+'  '+CustAddr[1])
				{
				}
				column(SalesShipmentHeaderShip_toPostCode__SalesShipmentHeaderShip_; "Sales Shipment Header"."Ship-to Post Code"+' '+"Sales Shipment Header"."Ship-to City")
				{
				}
				column(SalesShipmentHeaderShip_toAddress__SalesShipmentHeaderShip_t; "Sales Shipment Header"."Ship-to Address"+' '+"Sales Shipment Header"."Ship-to Address 2")
				{
				}
				column(Telefono__TELEFONO; 'Telefono: '+TELEFONO)
				{
				}
				column(SalesShipmentHeaderShip_toCountry_RegionCode__SalesShipmentH; "Sales Shipment Header"."Ship-to Country/Region Code"+'  '+"Sales Shipment Header"."Ship-to County")
				{
				}
				column(Totalbultos__FORMAT_SalesShipmentHeaderTotalbultos__FORMAT_c; 'Total bultos: ' +Format("Sales Shipment Header"."Total bultos")+'	 '+Format(cobtablu)+'/'+Format("Sales Shipment Header"."Total bultos"))
				{
				}
				column(Noexpedicion__SalesShipmentHeaderNoexpedicion; 'Nº expedicion: '+"Sales Shipment Header"."Nº expedición")
				{
				}
				trigger OnAfterGetRecord();
				begin
					cobtablu:=cobtablu+1;
					nveces:=nveces+1;
					if nveces>=cuantas+1 then begin
						 CurrReport.Break;
					end;
				end;
				
			}
			trigger OnAfterGetRecord();
			begin
				if "Sales Shipment Header"."Total bultos"=0 then begin
				////	 CurrReport.SKIP;
				end;
				cobtablu:=0;
				CompanyInfo.Get;
				FormatAddr.SalesShptShipTo(CustAddr,"Sales Shipment Header");
				FormatAddr.Company(InfoEmpresa,CompanyInfo);
				cuantas:="Sales Shipment Header"."Total bultos";
				nombreprepara:='';
				TELEFONO:='';
				if RecCusto.Get("Sales Shipment Header"."Sell-to Customer No.") then begin
					 TELEFONO:=RecCusto."Phone No.";
				end;
				transport:='';
				if RecTra.Get("Sales Shipment Header"."Shipping Agent Code") then begin
					 transport:=RecTra.Name;
				end;
				vendedor:='';
				if RecVende.Get("Sales Shipment Header"."Salesperson Code") then begin
					 vendedor:=RecVende.Name;
				end;
				tlinea:=0;
				Rec37.SetRange(Rec37."Document No.","No.");
				if Rec37.FindFirst then repeat
					 if Rec37.Quantity>0 then begin
						  tlinea:=tlinea+1;
					 end;
				until Rec37.Next = 0;
				PESOREAL:=0;
				PESO:=0;
				TOTALPALE:=0;
				if "Nº expedición"<>'' then begin
				Rec1102.Reset;
				Rec1102.SetCurrentkey(Rec1102."Nº expedición");
				Rec1102.SetRange(Rec1102."Nº expedición","Nº expedición");
				if Rec1102.FindFirst then repeat
					 TOTALPALE:=TOTALPALE+Rec1102."Nº Palets";
					 REC1112.Reset;
					 REC1112.SetRange(REC1112."Document No.",Rec1102."No.");
					 if REC1112.FindFirst then repeat
						  PESO:=PESO+REC1112.Quantity*REC1112."Gross Weight";
					 until REC1112.Next=0;
				until Rec1102.Next=0;
				if TOTALPALE<>0 then begin
					 PESO:=PESO+10*TOTALPALE;
				end;
									PESOREAL:=PESO;
									decre:=1;
									if RecTra.Get("Shipping Agent Code") then begin
										 if RecTra."Decremento kilo"<>0 then begin
											  decre:=(100-RecTra."Decremento kilo")/100;
										 end;
									end;
									PESO:=ROUND(PESO*decre,1);
				if PESO<1 then begin
					 PESO:=1;
				end;
				end;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;
	var
		Text000: label 'Work Order';
		Text001: label 'Sales Order No.';
		Text002: label 'Quantity used during work (Posted with the Sales Order)';
		Text003: label 'Quantity Used';
		Text004: label 'Comments';
		Text005: label 'Extra Item/Resource used during work (Posted with Item or Resource Journals)';
		ExcelBuf: Record "Excel Buffer" temporary;
		FormatAddr: Codeunit "Format Address";
		CustAddr: array [8] of Text[50];
		InfoEmpresa: array [8] of Text[30];
		PrintToExcel: Boolean;
		Text006: label 'Date';
		ESTANTE: Code[20];
		RecItem: Record Item;
		STOCK: Decimal;
		CompanyInfo: Record "Company Information";
		nombreprepara: Text[30];
		RecMulti: Record UnknownRecord50005;
		TELEFONO: Text[30];
		RecCusto: Record Customer;
		transport: Text[30];
		RecTra: Record "Shipping Agent";
		vendedor: Text[30];
		RecVende: Record "Salesperson/Purchaser";
		RecLC: Record "Sales Comment Line";
		Tex: array [4] of Text[255];
		conta: Integer;
		Rec37: Record "Sales Shipment Line";
		tlinea: Decimal;
		nveces: Decimal;
		cuantas: Decimal;
		cobtablu: Integer;
		PESOREAL: Decimal;
		PESO: Decimal;
		TOTALPALE: Decimal;
		Rec1102: Record "Sales Shipment Header";
		REC1112: Record "Sales Shipment Line";
		decre: Decimal;

	local procedure MakeWOHeader()
	begin
	end;

	local procedure MakeWOLineHeader()
	var
		HeaderLineNo: Integer;
	begin
	end;

	local procedure MakeWOLine()
	begin
	end;

	local procedure MakeWOCommentLineHeader()
	begin
	end;

	local procedure MakeWOCommentLine()
	begin
	end;

	local procedure MakeWOExtraLineHeader()
	begin
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50033_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50033;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
