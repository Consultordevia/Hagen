Report 50039 "Etiqueta grande"
{
    Caption = 'Etiqueta grande';
    RDLCLayout = './Layouts/Etiquetagrande.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Sales Header"; "Sales Shipment Header")
        {
            DataItemTableView = sorting("No.");
            RequestFilterFields = "No.", "Sell-to Customer No.";
            RequestFilterHeading = 'Sales Order';
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            dataitem(Integer; Integer)
            {
                column(ReportForNavId_2; 2) { } // Autogenerated by ForNav - Do not delete
                column(Bulto_; 'Bulto:')
                {
                }
                column(V_; '/')
                {
                }
                column(SalesHeaderTotalbultos; "Sales Header"."Total bultos")
                {
                    DecimalPlaces = 0 : 0;
                }
                column(conta; conta)
                {
                }
                column(SalesHeaderYourReference; "Sales Header"."Your Reference")
                {
                }
                column(SalesHeaderShip_toCounty; "Sales Header"."Ship-to County")
                {
                }
                column(SalesHeaderShip_toPostCode__SalesHeaderShip_toCity; "Sales Header"."Ship-to Post Code" + '   ' + "Sales Header"."Ship-to City")
                {
                }
                column(SalesHeaderShip_toAddress; "Sales Header"."Ship-to Address")
                {
                }
                column(SalesHeaderShip_toName; "Sales Header"."Ship-to Name")
                {
                }
                column(ESPANA_Tel_961200945; 'ESPAÑA - Tel: 961 20 09 45')
                {
                }
                column(V46260SILLA_VALENCIA; '46260 SILLA - VALENCIA')
                {
                }
                column(AvdaBeniparell_11y13; 'Avda. Beniparell, 11 y 13')
                {
                }
                column(HAGENCANARIASSC; 'HAGEN ESPAÑA S.A')
                {
                }
                column(SalesHeaderNoexpedicion; "Sales Header"."Nº expedición")
                {
                }
                column(nomcomercial; nomcomercial)
                {
                }
                trigger OnAfterGetRecord();
                begin
                    conta := conta + 1;
                    if conta > ("Sales Header"."Total bultos") then begin
                        CurrReport.Break;
                    end;
                end;

            }
            trigger OnAfterGetRecord();
            begin

                conta := 0;
                CompanyInfo.Get;
                ///FormatAddr.SalesHeaderShipTo(CustAddr,"Sales Header");
                FormatAddr.Company(InfoEmpresa, CompanyInfo);
                CONTAETI := 0;
                CODIGO := '1001201230400263080001';
                nombreprepara := '';
                TELEFONO := '';
                nomcomercial := '';
                if RecCusto.Get("Sales Header"."Sell-to Customer No.") then begin
                    TELEFONO := RecCusto."Phone No.";
                    nomcomercial := RecCusto."Search Name";
                end;
                transport := '';
                if RecTra.Get("Sales Header"."Shipping Agent Code") then begin
                    transport := RecTra.Name;
                end;
                vendedor := '';
                if RecVende.Get("Sales Header"."Salesperson Code") then begin
                    vendedor := RecVende.Name;
                end;
                tlinea := 0;
                ;
                Rec37.SetRange(Rec37."Document No.", "No.");
                if Rec37.FindFirst then
                    repeat
                        if Rec37.Quantity > 0 then begin
                            tlinea := tlinea + 1;
                        end;
                    until Rec37.Next = 0;
                CENTRO1 := '01';
                if RecEAD.Get("Sales Header"."Sell-to Customer No.", "Sales Header"."Ship-to Code") then begin
                    CENTRO1 := RecEAD."Cod. entrega ECI";
                end;
                CENTRO := RecCusto."Centro ECI";
                DPTO := '21900';
                NPEDIDO := CopyStr("Sales Header"."Your Reference", 1, 8);
                ////NALBA:=COPYSTR("Sales Header"."Order No.",2,3)+COPYSTR("Sales Header"."Order No.",6,4);
                contador := NALBA + '00';
                CODBAR := '98' + DPTO + NPEDIDO + NALBA;
                DESCODBAR := '(98) ' + DPTO + NPEDIDO + NALBA;
                dcentro := '91' + CENTRO1 + CENTRO;
                dcentro1 := '(91) ' + CENTRO1 + CENTRO;
                SUNABUL := 0;
                REC371.Reset;
                ///REC371.SETRANGE(REC371."Document Type","Sales Header"."Document Type");
                REC371.SetRange(REC371."Document No.", "Sales Header"."No.");
                if REC371.FindFirst then
                    repeat
                        if REC371.Quantity <> 0 then begin
                            if RecItem.Get(REC371."No.") then begin
                                if RecItem."Unidad expedicion ECI" <> 0 then begin
                                    if REC371.Quantity > RecItem."Unidad expedicion ECI" then begin
                                        SUNABUL := SUNABUL + ROUND(REC371.Quantity / RecItem."Unidad expedicion ECI", 1, '>');
                                    end;
                                    if REC371.Quantity <= RecItem."Unidad expedicion ECI" then begin
                                        SUNABUL := SUNABUL + 1;
                                    end;
                                end;
                            end;
                        end;
                    until REC371.Next = 0;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin


    end;

    trigger OnPostReport()
    begin

    end;

    trigger OnPreReport()
    begin

    end;

    var
        Text000: label 'Work Order';
        Text001: label 'Sales Order No.';
        Text002: label 'Quantity used during work (Posted with the Sales Order)';
        Text003: label 'Quantity Used';
        Text004: label 'Comments';
        Text005: label 'Extra Item/Resource used during work (Posted with Item or Resource Journals)';
        ExcelBuf: Record "Excel Buffer" temporary;
        FormatAddr: Codeunit "Format Address";
        CustAddr: array[8] of Text[50];
        InfoEmpresa: array[8] of Text[30];
        PrintToExcel: Boolean;
        Text006: label 'Date';
        ESTANTE: Code[20];
        RecItem: Record Item;
        STOCK: Decimal;
        CompanyInfo: Record "Company Information";
        nombreprepara: Text[30];
        RecMulti: Record Multitabla;
        TELEFONO: Text[30];
        RecCusto: Record Customer;
        transport: Text[30];
        RecTra: Record "Shipping Agent";
        vendedor: Text[30];
        RecVende: Record "Salesperson/Purchaser";
        RecLC: Record "Sales Comment Line";
        Tex: array[4] of Text[255];
        conta: Integer;
        Rec37: Record "Sales Shipment Line";
        REC371: Record "Sales Shipment Line";
        tlinea: Decimal;
        CODIGO: Code[80];
        codebar: Code[23];
        ok: Integer;
        C1: Code[2];
        CENTRO: Code[4];
        DPTO: Code[5];
        NPEDIDO: Code[8];
        NALBA: Code[7];
        CODBAR: Code[28];
        DESCODBAR: Code[50];
        NBUL: Integer;
        TOTALBUL: Integer;
        prod: Record Item;
        RecEAD: Record "Ship-to Address";
        CENTRO1: Code[2];
        dcentro: Code[20];
        dcentro1: Code[20];
        nueva: Code[30];
        nueva1: Code[30];
        cantidad: Decimal;
        contador: Code[9];
        dc: Code[1];
        DIG1: array[17] of Code[1];
        DIG2: array[17] of Integer;
        SUMA1: Integer;
        XX: Integer;
        SUMA2: Integer;
        RESTO: Integer;
        SUNABUL: Decimal;
        PROD1: Record Item;
        PROD2: Record Item;
        PROD3: Record Item;
        rut: Text[255];
        NUMETIQ: Integer;
        CONTAETI: Integer;
        CANTI: Decimal;
        nomcomercial: Text[80];

    procedure EncodeBarcode128(pText: Text[250]) RetVal: Text[250]
    var
        Checksum: Integer;
        i: Integer;
        currentchar: Char;
        StartChar: Char;
        StopChar: Char;
        ChecksumChar: Char;
    begin
    end;


    var
        ReportForNavOpenDesigner: Boolean;
        ReportForNavAllowDesign: Boolean;

}
