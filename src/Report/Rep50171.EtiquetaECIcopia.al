#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50171_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50171){}   
		type("System.IO.Path"; System_IO_Path50171) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50171 "Etiqueta ECI copia"
{
	Caption = 'Etiqueta ECI';
	UseRequestPage = false;
	RDLCLayout = './Layouts/EtiquetaECIcopia.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Sales Shipment Header";"Sales Shipment Header")
		{
			DataItemTableView = sorting("No.");
			RequestFilterFields = "No.","Sell-to Customer No.";
			RequestFilterHeading = 'Sales Order';
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			dataitem(Integer;Integer)
			{
				DataItemTableView = sorting(Number);
				column(ReportForNavId_2; 2) {} // Autogenerated by ForNav - Do not delete
				column(V0672949; '0672949')
				{
				}
				column(DESCODBAR; DESCODBAR)
				{
				}
				column(Picture_prod; prod.Picture)
				{
				}
				column(SalesShipmentHeaderNo; "Sales Shipment Header"."No.")
				{
				}
				column(ALBARAN; 'ALBARAN')
				{
				}
				column(SalesShipmentHeaderYourReference; "Sales Shipment Header"."Your Reference")
				{
				}
				column(PEDIDO; 'PEDIDO')
				{
				}
				column(V071_00; '071-00')
				{
				}
				column(DPTOPVENTA; 'DPTO. P. VENTA')
				{
				}
				column(CENTRO; CENTRO)
				{
				}
				column(NBUL___FORMAT_TOTALBUL; Format(NBUL)+' / '+Format(TOTALBUL))
				{
				}
				column(SalesShipmentHeaderShip_toName; "Sales Shipment Header"."Ship-to Name")
				{
				}
				column(SalesShipmentHeaderShip_toAddress; "Sales Shipment Header"."Ship-to Address")
				{
				}
				column(SalesShipmentHeaderShip_toCounty; "Sales Shipment Header"."Ship-to County")
				{
				}
				column(SalesShipmentHeaderShip_toPostCode__SalesShipmentHeaderShip_; "Sales Shipment Header"."Ship-to Post Code"+'   '+"Sales Shipment Header"."Ship-to City")
				{
				}
				column(SalesShipmentHeaderSell_toCounty; "Sales Shipment Header"."Sell-to County")
				{
				}
				column(SalesShipmentHeaderShip_toPostCode__SalesShipmentHeaderSell_; "Sales Shipment Header"."Ship-to Post Code"+'   '+"Sales Shipment Header"."Sell-to City")
				{
				}
				column(SalesShipmentHeaderSell_toAddress; "Sales Shipment Header"."Sell-to Address")
				{
				}
				column(SalesShipmentHeaderSell_toCustomerName; "Sales Shipment Header"."Sell-to Customer Name")
				{
				}
				trigger OnAfterGetRecord();
				begin
					NBUL:=NBUL+1;
					if NBUL>TOTALBUL then begin
						CurrReport.Quit;
					end;
					/////CODBAR:='9001097507100210152011234567';
					ok:= SHELL('C:\navibar2\Navibar.exe',CODBAR+'{14{385{300{c:\b.bmp');
					prod.Get('10');
					prod.Picture.Import('C:\b.bmp');
				end;
				
			}
			trigger OnAfterGetRecord();
			begin
				CompanyInfo.Get;
				FormatAddr.SalesShptShipTo(CustAddr,"Sales Shipment Header");
				FormatAddr.Company(InfoEmpresa,CompanyInfo);
				CODIGO:='1001201230400263080001';
				nombreprepara:='';
				TELEFONO:='';
				if RecCusto.Get("Sales Shipment Header"."Sell-to Customer No.") then begin
					 TELEFONO:=RecCusto."Phone No.";
				end;
				transport:='';
				if RecTra.Get("Sales Shipment Header"."Shipping Agent Code") then begin
					 transport:=RecTra.Name;
				end;
				vendedor:='';
				if RecVende.Get("Sales Shipment Header"."Salesperson Code") then begin
					 vendedor:=RecVende.Name;
				end;
				tlinea:=0;
				;
				Rec37.SetRange(Rec37."Document No.","No.");
				if Rec37.FindFirst then repeat
					 if Rec37.Quantity>0 then begin
						  tlinea:=tlinea+1;
					 end;
				until Rec37.Next = 0;
				CENTRO1:='01';
				if RecEAD.Get("Sales Shipment Header"."Sell-to Customer No.","Sales Shipment Header"."Ship-to Code") then begin
					 CENTRO1:=RecEAD."Cod. entrega ECI";
				end;
				CENTRO:=RecCusto."Centro ECI";
				DPTO:='07100';
				NPEDIDO:=CopyStr("Sales Shipment Header"."Your Reference",1,8);
				NALBA:=CopyStr("Sales Shipment Header"."No.",1,7);
				CODBAR:='90'+CENTRO1+CENTRO+DPTO+NPEDIDO+NALBA;
				DESCODBAR:='(90) '+CENTRO1+CENTRO+DPTO+NPEDIDO+NALBA;
				///// CENTRO:="Sales Shipment Header"."Sell-to Customer No.";
				TOTALBUL:="Sales Shipment Header"."NÂº bultos";
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;
	var
		Text000: label 'Work Order';
		Text001: label 'Sales Order No.';
		Text002: label 'Quantity used during work (Posted with the Sales Order)';
		Text003: label 'Quantity Used';
		Text004: label 'Comments';
		Text005: label 'Extra Item/Resource used during work (Posted with Item or Resource Journals)';
		ExcelBuf: Record "Excel Buffer" temporary;
		FormatAddr: Codeunit "Format Address";
		CustAddr: array [8] of Text[50];
		InfoEmpresa: array [8] of Text[30];
		PrintToExcel: Boolean;
		Text006: label 'Date';
		ESTANTE: Code[20];
		RecItem: Record Item;
		STOCK: Decimal;
		CompanyInfo: Record "Company Information";
		nombreprepara: Text[30];
		RecMulti: Record UnknownRecord50005;
		TELEFONO: Text[30];
		RecCusto: Record Customer;
		transport: Text[30];
		RecTra: Record "Shipping Agent";
		vendedor: Text[30];
		RecVende: Record "Salesperson/Purchaser";
		RecLC: Record "Sales Comment Line";
		Tex: array [4] of Text[255];
		conta: Integer;
		Rec37: Record "Sales Shipment Line";
		tlinea: Decimal;
		CODIGO: Code[80];
		codebar: Code[23];
		ok: Integer;
		C1: Code[2];
		CENTRO: Code[4];
		DPTO: Code[5];
		NPEDIDO: Code[8];
		NALBA: Code[7];
		CODBAR: Code[28];
		DESCODBAR: Code[50];
		NBUL: Integer;
		TOTALBUL: Integer;
		prod: Record Item;
		RecEAD: Record "Ship-to Address";
		CENTRO1: Code[2];

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50171_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50171;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
