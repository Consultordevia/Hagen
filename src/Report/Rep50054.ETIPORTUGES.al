#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{	
	assembly("ForNav.Reports.7.3.0.2521")
	{
		type(ForNav.Report_7_3_0_2521; ForNavReport50054_v7_3_0_2521){}   
	}
	assembly("mscorlib")
	{
		Version='4.0.0.0';
		type("System.IO.Stream"; SystemIOStream50054){}   
		type("System.IO.Path"; System_IO_Path50054) {}
	}
} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 50054 "ETI. PORTUGES"
{
	UseRequestPage = false;
	RDLCLayout = './Layouts/ETI.PORTUGES.rdlc'; DefaultLayout = RDLC;

	dataset
	{
		dataitem("Extended Text Header";"Extended Text Header")
		{
			DataItemTableView = sorting("Table Name","No.","Language Code","Text No.") where("Table Name"=const(Etiquetas));
			RequestFilterFields = "Table Name";
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(Text6; Text[6])
			{
			}
			column(descrip; descrip)
			{
			}
			column(Text5; Text[5])
			{
			}
			column(Text4; Text[4])
			{
			}
			column(Text3; Text[3])
			{
			}
			column(Text2; Text[2])
			{
			}
			column(Text1; Text[1])
			{
			}
			trigger OnPreDataItem();
			begin
				LastFieldNo := FieldNo("Table Name");
			end;
			
			trigger OnAfterGetRecord();
			begin
				X:=0;
				RecL.Reset;
				RecL.SetRange(RecL."Table Name","Extended Text Header"."Table Name");
				RecL.SetRange(RecL."No.","Extended Text Header"."No.");
				if RecL.FindFirst then repeat
					 X:=X+1;
					 Text[X]:=RecL.Text;
				until (RecL.Next=0) or (X=5);
				Text[6]:=RecL."No."+'---------'+CODEXPE;
				descrip:='';
				if RecItem.Get("Extended Text Header"."No.") then begin
					 descrip:=RecItem.Description;
					 RecTP.Reset;
					 RecTP.SetRange(RecTP."Item No.","Extended Text Header"."No.");
					 RecTP.SetRange(RecTP."Language Code",'PTG');
					 if RecTP.FindFirst then begin
						  descrip:=RecTP.Description;
					 end;
				end;
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
			area(Content)
			{
				group(Options)
				{
					Caption = 'Options';
					field(ForNavOpenDesigner;ReportForNavOpenDesigner)
					{
						ApplicationArea = Basic;
						Caption = 'Design';
						Visible = ReportForNavAllowDesign;
					}
				}
			}
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin
		;ReportForNav.Post;
	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;
	var
		LastFieldNo: Integer;
		FooterPrinted: Boolean;
		Text: array [7] of Text[50];
		RecL: Record "Extended Text Line";
		X: Integer;
		CODEXPE: Code[20];
		descrip: Text[60];
		RecTP: Record "Item Translation";
		RecItem: Record Item;

	procedure NEXPE(NEXPE: Code[20])
	begin
		CODEXPE:=NEXPE;
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var 
		[WithEvents]
		ReportForNav : DotNet ForNavReport50054_v7_3_0_2521;
		ReportForNavOpenDesigner : Boolean;
		[InDataSet]
		ReportForNavAllowDesign : Boolean;

	local procedure ReportsForNavInit();
	var
		ApplicationSystemConstants: Codeunit "Application System Constants";
		addInFileName : Text;
		tempAddInFileName : Text;
		path: DotNet System_IO_Path50054;
		ReportForNavObject: Variant;
	begin
		addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2521\ForNav.Reports.7.3.0.2521.dll';
		if not File.Exists(addInFileName) then begin
			tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2521.dll';
			if not File.Exists(tempAddInFileName) then
				Error('Please install the ForNAV DLL version 7.3.0.2521 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
		end;
		ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
		ReportForNav := ReportForNavObject;
		ReportForNav.Init();
	end;

	local procedure ReportsForNavPre();
	begin
		ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;
		if not ReportForNav.Pre() then CurrReport.Quit();
	end;

	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
